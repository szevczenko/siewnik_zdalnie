
nowy_sterownik.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001702  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000056  00800060  00001702  00001796  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001e6  008000b6  008000b6  000017ec  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001848  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  00001884  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021f5  00000000  00000000  00001af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001167  00000000  00000000  00003ce9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000135f  00000000  00000000  00004e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000580  00000000  00000000  000061b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c61  00000000  00000000  00006730  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000111f  00000000  00000000  00007391  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  000084b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 24 03 	jmp	0x648	; 0x648 <__vector_10>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <__vector_13>
      38:	0c 94 2f 04 	jmp	0x85e	; 0x85e <__vector_14>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e2 e0       	ldi	r30, 0x02	; 2
     16a:	f7 e1       	ldi	r31, 0x17	; 23
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a6 3b       	cpi	r26, 0xB6	; 182
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	22 e0       	ldi	r18, 0x02	; 2
     17a:	a6 eb       	ldi	r26, 0xB6	; 182
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	ac 39       	cpi	r26, 0x9C	; 156
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <main>
     18c:	0c 94 7f 0b 	jmp	0x16fe	; 0x16fe <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <debug_msg>:

#if L_DEBUG
#include <stdio.h>
char debug_buff[64];
void debug_msg( const char* format, ... )
{
     194:	cf 93       	push	r28
     196:	df 93       	push	r29
     198:	cd b7       	in	r28, 0x3d	; 61
     19a:	de b7       	in	r29, 0x3e	; 62
     19c:	ae 01       	movw	r20, r28
     19e:	4b 5f       	subi	r20, 0xFB	; 251
     1a0:	5f 4f       	sbci	r21, 0xFF	; 255
     1a2:	fa 01       	movw	r30, r20
     1a4:	61 91       	ld	r22, Z+
     1a6:	71 91       	ld	r23, Z+
     1a8:	af 01       	movw	r20, r30
	va_list arglist;
	va_start( arglist, format );
	vsprintf(debug_buff, format, arglist );
     1aa:	8e e3       	ldi	r24, 0x3E	; 62
     1ac:	92 e0       	ldi	r25, 0x02	; 2
     1ae:	0e 94 05 0b 	call	0x160a	; 0x160a <vsprintf>
	va_end( arglist );
	#if USE_USART
	uart_puts(debug_buff);
     1b2:	8e e3       	ldi	r24, 0x3E	; 62
     1b4:	92 e0       	ldi	r25, 0x02	; 2
     1b6:	0e 94 81 04 	call	0x902	; 0x902 <uart0_puts>
	#endif
}
     1ba:	df 91       	pop	r29
     1bc:	cf 91       	pop	r28
     1be:	08 95       	ret

000001c0 <init_pin>:
uint8_t servo_vibro_value;

void init_pin(void)
{
	//UART_TX_PIN
	DDRD |= (1<<1);
     1c0:	89 9a       	sbi	0x11, 1	; 17
     1c2:	08 95       	ret

000001c4 <init_driver>:
}

void init_driver(void)
{
	#if USE_USART
	uart_init(UART_BAUD_SELECT(57600, F_CPU));
     1c4:	88 e0       	ldi	r24, 0x08	; 8
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	0e 94 56 04 	call	0x8ac	; 0x8ac <uart0_init>
	#endif
	timer0_init(TIM0_PRESCALER, TIM0_ARR);
     1cc:	62 e3       	ldi	r22, 0x32	; 50
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	0e 94 59 03 	call	0x6b2	; 0x6b2 <timer0_init>
	init_system();
     1d4:	0e 94 15 03 	call	0x62a	; 0x62a <init_system>
	init_measure();
     1d8:	0e 94 be 01 	call	0x37c	; 0x37c <init_measure>
	CLEAR_PIN(SFIOR, PUD);
     1dc:	80 b7       	in	r24, 0x30	; 48
     1de:	8b 7f       	andi	r24, 0xFB	; 251
     1e0:	80 bf       	out	0x30, r24	; 48
     1e2:	08 95       	ret

000001e4 <main>:

uint32_t tets_cnt;
int main(void)
{
	#if CONFIG_DEVICE_SIEWNIK
	servo_init(0);
     1e4:	80 e0       	ldi	r24, 0x00	; 0
     1e6:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <servo_init>
	#endif
	init_pin();
     1ea:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <init_pin>
	sei();
     1ee:	78 94       	sei
	init_driver();
     1f0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <init_driver>
	debug_msg("/-----------START SYSTEM------------/\n");
     1f4:	80 e6       	ldi	r24, 0x60	; 96
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	9f 93       	push	r25
     1fa:	8f 93       	push	r24
     1fc:	0e 94 ca 00 	call	0x194	; 0x194 <debug_msg>
	on_system();
     200:	0e 94 16 03 	call	0x62c	; 0x62c <on_system>
     204:	0f 90       	pop	r0
     206:	0f 90       	pop	r0
		measure_process();
		accumulator_process();
		#if SERIAL_PLOT && USE_USART
		uart_process();
		#endif
		if (tets_cnt < mktime.ms) {
     208:	c6 e9       	ldi	r28, 0x96	; 150
     20a:	d2 e0       	ldi	r29, 0x02	; 2
			debug_msg("TEST\n");
     20c:	07 e8       	ldi	r16, 0x87	; 135
     20e:	10 e0       	ldi	r17, 0x00	; 0
	debug_msg("/-----------START SYSTEM------------/\n");
	on_system();
    /* Replace with your application code */
    while (1) 
    {
		dcmotor_process(motor_value);
     210:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <motor_value>
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	0e 94 92 01 	call	0x324	; 0x324 <dcmotor_process>
		#if CONFIG_DEVICE_SIEWNIK
		servo_process(servo_vibro_value);
     21a:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <servo_vibro_value>
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	0e 94 03 03 	call	0x606	; 0x606 <servo_process>
		#endif
		measure_process();
     224:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <measure_process>
		accumulator_process();
     228:	0e 94 3e 01 	call	0x27c	; 0x27c <accumulator_process>
		#if SERIAL_PLOT && USE_USART
		uart_process();
		#endif
		if (tets_cnt < mktime.ms) {
     22c:	4a 81       	ldd	r20, Y+2	; 0x02
     22e:	5b 81       	ldd	r21, Y+3	; 0x03
     230:	6c 81       	ldd	r22, Y+4	; 0x04
     232:	7d 81       	ldd	r23, Y+5	; 0x05
     234:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <tets_cnt>
     238:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <tets_cnt+0x1>
     23c:	a0 91 80 02 	lds	r26, 0x0280	; 0x800280 <tets_cnt+0x2>
     240:	b0 91 81 02 	lds	r27, 0x0281	; 0x800281 <tets_cnt+0x3>
     244:	84 17       	cp	r24, r20
     246:	95 07       	cpc	r25, r21
     248:	a6 07       	cpc	r26, r22
     24a:	b7 07       	cpc	r27, r23
     24c:	08 f7       	brcc	.-62     	; 0x210 <main+0x2c>
			debug_msg("TEST\n");
     24e:	1f 93       	push	r17
     250:	0f 93       	push	r16
     252:	0e 94 ca 00 	call	0x194	; 0x194 <debug_msg>
			tets_cnt = mktime.ms + 1000;
     256:	8a 81       	ldd	r24, Y+2	; 0x02
     258:	9b 81       	ldd	r25, Y+3	; 0x03
     25a:	ac 81       	ldd	r26, Y+4	; 0x04
     25c:	bd 81       	ldd	r27, Y+5	; 0x05
     25e:	88 51       	subi	r24, 0x18	; 24
     260:	9c 4f       	sbci	r25, 0xFC	; 252
     262:	af 4f       	sbci	r26, 0xFF	; 255
     264:	bf 4f       	sbci	r27, 0xFF	; 255
     266:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <tets_cnt>
     26a:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <tets_cnt+0x1>
     26e:	a0 93 80 02 	sts	0x0280, r26	; 0x800280 <tets_cnt+0x2>
     272:	b0 93 81 02 	sts	0x0281, r27	; 0x800281 <tets_cnt+0x3>
     276:	0f 90       	pop	r0
     278:	0f 90       	pop	r0
     27a:	ca cf       	rjmp	.-108    	; 0x210 <main+0x2c>

0000027c <accumulator_process>:
void accumulator_process(void)
{
	
	static timer_t accumulator_timer;
	
	if(accumulator_timer < mktime.ms)
     27c:	40 91 98 02 	lds	r20, 0x0298	; 0x800298 <mktime+0x2>
     280:	50 91 99 02 	lds	r21, 0x0299	; 0x800299 <mktime+0x3>
     284:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <mktime+0x4>
     288:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <mktime+0x5>
     28c:	80 91 b6 00 	lds	r24, 0x00B6	; 0x8000b6 <__data_end>
     290:	90 91 b7 00 	lds	r25, 0x00B7	; 0x8000b7 <__data_end+0x1>
     294:	a0 91 b8 00 	lds	r26, 0x00B8	; 0x8000b8 <__data_end+0x2>
     298:	b0 91 b9 00 	lds	r27, 0x00B9	; 0x8000b9 <__data_end+0x3>
     29c:	84 17       	cp	r24, r20
     29e:	95 07       	cpc	r25, r21
     2a0:	a6 07       	cpc	r26, r22
     2a2:	b7 07       	cpc	r27, r23
     2a4:	b8 f4       	brcc	.+46     	; 0x2d4 <accumulator_process+0x58>
	{
		filtered_accum_adc_val = measure_get_filtered_value(MEAS_ACCUM);
     2a6:	83 e0       	ldi	r24, 0x03	; 3
     2a8:	0e 94 b7 02 	call	0x56e	; 0x56e <measure_get_filtered_value>
		accumulator_timer = mktime.ms + 100;
     2ac:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <mktime+0x2>
     2b0:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <mktime+0x3>
     2b4:	a0 91 9a 02 	lds	r26, 0x029A	; 0x80029a <mktime+0x4>
     2b8:	b0 91 9b 02 	lds	r27, 0x029B	; 0x80029b <mktime+0x5>
     2bc:	8c 59       	subi	r24, 0x9C	; 156
     2be:	9f 4f       	sbci	r25, 0xFF	; 255
     2c0:	af 4f       	sbci	r26, 0xFF	; 255
     2c2:	bf 4f       	sbci	r27, 0xFF	; 255
     2c4:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <__data_end>
     2c8:	90 93 b7 00 	sts	0x00B7, r25	; 0x8000b7 <__data_end+0x1>
     2cc:	a0 93 b8 00 	sts	0x00B8, r26	; 0x8000b8 <__data_end+0x2>
     2d0:	b0 93 b9 00 	sts	0x00B9, r27	; 0x8000b9 <__data_end+0x3>
     2d4:	08 95       	ret

000002d6 <adc_setchannel>:
/*
 * set an adc channel
 */
void adc_setchannel(uint8_t channel)
{
	ADCSRA &= ~(1 << ADEN);
     2d6:	37 98       	cbi	0x06, 7	; 6
	ADMUX = (ADMUX & 0xf8) | (channel & 0x07); //set channel
     2d8:	97 b1       	in	r25, 0x07	; 7
     2da:	98 7f       	andi	r25, 0xF8	; 248
     2dc:	87 70       	andi	r24, 0x07	; 7
     2de:	89 2b       	or	r24, r25
     2e0:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1 << ADEN);
     2e2:	37 9a       	sbi	0x06, 7	; 6
     2e4:	08 95       	ret

000002e6 <adc_readsel>:
/*
 * read from selected adc channel
 */
uint16_t adc_readsel(void)
{
	ADCSRA |= (1 << ADSC); // Start conversion
     2e6:	36 9a       	sbi	0x06, 6	; 6
	while(ADCSRA & _BV(ADSC)); 
     2e8:	36 99       	sbic	0x06, 6	; 6
     2ea:	fe cf       	rjmp	.-4      	; 0x2e8 <adc_readsel+0x2>
	//while( !(ADCSRA & (1<<ADIF)) ); // Wait for conversion to complete
	uint16_t adc = ADC;
     2ec:	84 b1       	in	r24, 0x04	; 4
     2ee:	95 b1       	in	r25, 0x05	; 5
	//ADCSRA |= (1 << ADIF); // Clear ADIF by writing one to it
	return(adc);
}
     2f0:	08 95       	ret

000002f2 <adc_read>:
/*
 * read from adc channel
 */
uint16_t adc_read(uint8_t channel)
{
	adc_setchannel(channel);
     2f2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <adc_setchannel>
	return adc_readsel();
     2f6:	0e 94 73 01 	call	0x2e6	; 0x2e6 <adc_readsel>
}
     2fa:	08 95       	ret

000002fc <dcmotorpwm_init>:
	else 
	{
		//debug_msg("dcmotor canot start\n");
		return 0;
	}
}
     2fc:	8d e8       	ldi	r24, 0x8D	; 141
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	9f 93       	push	r25
     302:	8f 93       	push	r24
     304:	0e 94 ca 00 	call	0x194	; 0x194 <debug_msg>
     308:	86 e8       	ldi	r24, 0x86	; 134
     30a:	92 e0       	ldi	r25, 0x02	; 2
     30c:	0e 94 85 03 	call	0x70a	; 0x70a <evTime_init>
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <motorD>
     316:	94 98       	cbi	0x12, 4	; 18
     318:	15 bc       	out	0x25, r1	; 37
     31a:	8f 9a       	sbi	0x11, 7	; 17
     31c:	97 9a       	sbi	0x12, 7	; 18
     31e:	0f 90       	pop	r0
     320:	0f 90       	pop	r0
     322:	08 95       	ret

00000324 <dcmotor_process>:

void dcmotor_process(uint16_t value)
{
     324:	cf 93       	push	r28
     326:	c8 2f       	mov	r28, r24
	static evTime dcmotor_timer;
	if (evTime_process_period(&dcmotor_timer, 150))
     328:	46 e9       	ldi	r20, 0x96	; 150
     32a:	50 e0       	ldi	r21, 0x00	; 0
     32c:	60 e0       	ldi	r22, 0x00	; 0
     32e:	70 e0       	ldi	r23, 0x00	; 0
     330:	8a eb       	ldi	r24, 0xBA	; 186
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	0e 94 c5 03 	call	0x78a	; 0x78a <evTime_process_period>
     338:	89 2b       	or	r24, r25
     33a:	61 f0       	breq	.+24     	; 0x354 <dcmotor_process+0x30>
	{
		//debug_msg("Process %d\n", motorD.state);
		switch(motorD.state)
     33c:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <motorD>
     340:	82 30       	cpi	r24, 0x02	; 2
     342:	19 f0       	breq	.+6      	; 0x34a <dcmotor_process+0x26>
     344:	84 30       	cpi	r24, 0x04	; 4
     346:	19 f0       	breq	.+6      	; 0x34e <dcmotor_process+0x2a>
     348:	05 c0       	rjmp	.+10     	; 0x354 <dcmotor_process+0x30>
		{
			case MOTOR_ON:
			OCR2 = value;
     34a:	c3 bd       	out	0x23, r28	; 35
			break;
     34c:	03 c0       	rjmp	.+6      	; 0x354 <dcmotor_process+0x30>

			case MOTOR_OFF:
			break;

			case MOTOR_AXELERATE:
			motorD.state = MOTOR_ON; //!!
     34e:	82 e0       	ldi	r24, 0x02	; 2
     350:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <motorD>
		
	}
	#if !TEST_APP
	
	#endif
}
     354:	cf 91       	pop	r28
     356:	08 95       	ret

00000358 <filtered_value>:
static uint16_t s_o_t_adc;


static uint16_t filtered_value(uint16_t *tab, uint8_t size)
{
	uint16_t ret_val = *tab;
     358:	fc 01       	movw	r30, r24
     35a:	20 81       	ld	r18, Z
     35c:	31 81       	ldd	r19, Z+1	; 0x01
	for (uint8_t i = 1; i<size; i++)
     35e:	62 30       	cpi	r22, 0x02	; 2
     360:	58 f0       	brcs	.+22     	; 0x378 <filtered_value+0x20>
     362:	32 96       	adiw	r30, 0x02	; 2
     364:	91 e0       	ldi	r25, 0x01	; 1
	{
		ret_val = (ret_val + tab[i])/2;
     366:	41 91       	ld	r20, Z+
     368:	51 91       	ld	r21, Z+
     36a:	24 0f       	add	r18, r20
     36c:	35 1f       	adc	r19, r21
     36e:	36 95       	lsr	r19
     370:	27 95       	ror	r18


static uint16_t filtered_value(uint16_t *tab, uint8_t size)
{
	uint16_t ret_val = *tab;
	for (uint8_t i = 1; i<size; i++)
     372:	9f 5f       	subi	r25, 0xFF	; 255
     374:	69 13       	cpse	r22, r25
     376:	f7 cf       	rjmp	.-18     	; 0x366 <filtered_value+0xe>
	{
		ret_val = (ret_val + tab[i])/2;
	}
	return ret_val;
}
     378:	c9 01       	movw	r24, r18
     37a:	08 95       	ret

0000037c <init_measure>:

void init_measure(void)
{
     37c:	e3 e0       	ldi	r30, 0x03	; 3
     37e:	f1 e0       	ldi	r31, 0x01	; 1
     380:	2b e2       	ldi	r18, 0x2B	; 43
     382:	31 e0       	ldi	r19, 0x01	; 1
	for(uint8_t i = 0; i<ACCUMULATOR_SIZE_TAB; i++)
	{
		accumulator_tab[i] = ACCUMULATOR_LOW_VOLTAGE + (ACCUMULATOR_HIGH_VOLTAGE - ACCUMULATOR_LOW_VOLTAGE)/2;
     384:	81 ef       	ldi	r24, 0xF1	; 241
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	81 93       	st	Z+, r24
     38a:	91 93       	st	Z+, r25
	return ret_val;
}

void init_measure(void)
{
	for(uint8_t i = 0; i<ACCUMULATOR_SIZE_TAB; i++)
     38c:	2e 17       	cp	r18, r30
     38e:	3f 07       	cpc	r19, r31
     390:	d9 f7       	brne	.-10     	; 0x388 <init_measure+0xc>
     392:	e2 ee       	ldi	r30, 0xE2	; 226
     394:	f0 e0       	ldi	r31, 0x00	; 0
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	91 e0       	ldi	r25, 0x01	; 1
	{
		accumulator_tab[i] = ACCUMULATOR_LOW_VOLTAGE + (ACCUMULATOR_HIGH_VOLTAGE - ACCUMULATOR_LOW_VOLTAGE)/2;
	}
    for(uint8_t i = 0; i<FILTER_TABLE_SIZE; i++)
	{
		motor_f_table[i] = 0;
     39a:	11 92       	st	Z+, r1
     39c:	11 92       	st	Z+, r1
{
	for(uint8_t i = 0; i<ACCUMULATOR_SIZE_TAB; i++)
	{
		accumulator_tab[i] = ACCUMULATOR_LOW_VOLTAGE + (ACCUMULATOR_HIGH_VOLTAGE - ACCUMULATOR_LOW_VOLTAGE)/2;
	}
    for(uint8_t i = 0; i<FILTER_TABLE_SIZE; i++)
     39e:	8e 17       	cp	r24, r30
     3a0:	9f 07       	cpc	r25, r31
     3a2:	d9 f7       	brne	.-10     	; 0x39a <init_measure+0x1e>
     3a4:	ea ec       	ldi	r30, 0xCA	; 202
     3a6:	f0 e0       	ldi	r31, 0x00	; 0
     3a8:	8e ed       	ldi	r24, 0xDE	; 222
     3aa:	90 e0       	ldi	r25, 0x00	; 0
	{
		motor_f_table[i] = 0;
	}
    for(uint8_t i = 0; i<FILTER_TABLE_S_SIZE; i++)
	{
		s_o_t_f_table[i] = 0;
     3ac:	11 92       	st	Z+, r1
     3ae:	11 92       	st	Z+, r1
	}
    for(uint8_t i = 0; i<FILTER_TABLE_SIZE; i++)
	{
		motor_f_table[i] = 0;
	}
    for(uint8_t i = 0; i<FILTER_TABLE_S_SIZE; i++)
     3b0:	8e 17       	cp	r24, r30
     3b2:	9f 07       	cpc	r25, r31
     3b4:	d9 f7       	brne	.-10     	; 0x3ac <init_measure+0x30>
	{
		s_o_t_f_table[i] = 0;
	}
}
     3b6:	08 95       	ret

000003b8 <measure_process>:
static timer_t measure_timer;
static uint32_t debug_msg_counter;
void measure_process(void)
{
     3b8:	cf 92       	push	r12
     3ba:	df 92       	push	r13
     3bc:	ef 92       	push	r14
     3be:	ff 92       	push	r15
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
	if (measure_timer < mktime.ms)
     3c4:	40 91 98 02 	lds	r20, 0x0298	; 0x800298 <mktime+0x2>
     3c8:	50 91 99 02 	lds	r21, 0x0299	; 0x800299 <mktime+0x3>
     3cc:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <mktime+0x4>
     3d0:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <mktime+0x5>
     3d4:	80 91 c3 00 	lds	r24, 0x00C3	; 0x8000c3 <measure_timer>
     3d8:	90 91 c4 00 	lds	r25, 0x00C4	; 0x8000c4 <measure_timer+0x1>
     3dc:	a0 91 c5 00 	lds	r26, 0x00C5	; 0x8000c5 <measure_timer+0x2>
     3e0:	b0 91 c6 00 	lds	r27, 0x00C6	; 0x8000c6 <measure_timer+0x3>
     3e4:	84 17       	cp	r24, r20
     3e6:	95 07       	cpc	r25, r21
     3e8:	a6 07       	cpc	r26, r22
     3ea:	b7 07       	cpc	r27, r23
     3ec:	08 f0       	brcs	.+2      	; 0x3f0 <measure_process+0x38>
     3ee:	b8 c0       	rjmp	.+368    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
	{
		measure_timer = mktime.ms + 20;
     3f0:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <mktime+0x2>
     3f4:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <mktime+0x3>
     3f8:	a0 91 9a 02 	lds	r26, 0x029A	; 0x80029a <mktime+0x4>
     3fc:	b0 91 9b 02 	lds	r27, 0x029B	; 0x80029b <mktime+0x5>
     400:	44 96       	adiw	r24, 0x14	; 20
     402:	a1 1d       	adc	r26, r1
     404:	b1 1d       	adc	r27, r1
     406:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <measure_timer>
     40a:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <measure_timer+0x1>
     40e:	a0 93 c5 00 	sts	0x00C5, r26	; 0x8000c5 <measure_timer+0x2>
     412:	b0 93 c6 00 	sts	0x00C6, r27	; 0x8000c6 <measure_timer+0x3>
		accum_adc = adc_read(ACCUMULATOR_ADC_CH); 
     416:	80 e0       	ldi	r24, 0x00	; 0
     418:	0e 94 79 01 	call	0x2f2	; 0x2f2 <adc_read>
     41c:	ec 01       	movw	r28, r24
		#if CONFIG_DEVICE_SOLARKA
		#endif
		#if CONFIG_DEVICE_SIEWNIK
		accum_adc += motor_filter_value*0.27; //motor_filter_value*0.0075*1025/5/5.7
     41e:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <motor_filter_value>
     422:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <motor_filter_value+0x1>
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	0e 94 2c 05 	call	0xa58	; 0xa58 <__floatunsisf>
     42e:	21 e7       	ldi	r18, 0x71	; 113
     430:	3d e3       	ldi	r19, 0x3D	; 61
     432:	4a e8       	ldi	r20, 0x8A	; 138
     434:	5e e3       	ldi	r21, 0x3E	; 62
     436:	0e 94 ba 05 	call	0xb74	; 0xb74 <__mulsf3>
     43a:	6b 01       	movw	r12, r22
     43c:	7c 01       	movw	r14, r24
     43e:	be 01       	movw	r22, r28
     440:	80 e0       	ldi	r24, 0x00	; 0
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	0e 94 2c 05 	call	0xa58	; 0xa58 <__floatunsisf>
     448:	9b 01       	movw	r18, r22
     44a:	ac 01       	movw	r20, r24
     44c:	c7 01       	movw	r24, r14
     44e:	b6 01       	movw	r22, r12
     450:	0e 94 91 04 	call	0x922	; 0x922 <__addsf3>
     454:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__fixunssfsi>
     458:	70 93 2e 01 	sts	0x012E, r23	; 0x80012e <accum_adc+0x1>
     45c:	60 93 2d 01 	sts	0x012D, r22	; 0x80012d <accum_adc>
		#endif
		accumulator_tab[iteration_adc_accum_table] = accum_adc;
     460:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <iteration_adc_accum_table>
     464:	e2 2f       	mov	r30, r18
     466:	f0 e0       	ldi	r31, 0x00	; 0
     468:	ee 0f       	add	r30, r30
     46a:	ff 1f       	adc	r31, r31
     46c:	ed 5f       	subi	r30, 0xFD	; 253
     46e:	fe 4f       	sbci	r31, 0xFE	; 254
     470:	71 83       	std	Z+1, r23	; 0x01
     472:	60 83       	st	Z, r22
		
		iteration_adc_accum_table++;
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	82 0f       	add	r24, r18
     478:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <iteration_adc_accum_table>
		motor_adc = adc_read(MOTOR_ADC_CH);
     47c:	82 e0       	ldi	r24, 0x02	; 2
     47e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <adc_read>
		if (motor_adc > 31) motor_adc = motor_adc - 31;
     482:	80 32       	cpi	r24, 0x20	; 32
     484:	91 05       	cpc	r25, r1
     486:	30 f0       	brcs	.+12     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     488:	4f 97       	sbiw	r24, 0x1f	; 31
     48a:	90 93 e1 00 	sts	0x00E1, r25	; 0x8000e1 <motor_adc+0x1>
     48e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <motor_adc>
     492:	04 c0       	rjmp	.+8      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
		else motor_adc = 0;
     494:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <motor_adc+0x1>
     498:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <motor_adc>
		motor_f_table[iteration_adc_motor_table] = motor_adc;
     49c:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <iteration_adc_motor_table>
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	ee 0f       	add	r30, r30
     4a4:	ff 1f       	adc	r31, r31
     4a6:	ee 51       	subi	r30, 0x1E	; 30
     4a8:	ff 4f       	sbci	r31, 0xFF	; 255
     4aa:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <motor_adc>
     4ae:	90 91 e1 00 	lds	r25, 0x00E1	; 0x8000e1 <motor_adc+0x1>
     4b2:	91 83       	std	Z+1, r25	; 0x01
     4b4:	80 83       	st	Z, r24
		///////////////////////////////////////////////////////////
		////////// TODO isset_timer
		s_o_t_adc = adc_read(SERVO_ADC_CH);
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	0e 94 79 01 	call	0x2f2	; 0x2f2 <adc_read>
     4bc:	90 93 c8 00 	sts	0x00C8, r25	; 0x8000c8 <s_o_t_adc+0x1>
     4c0:	80 93 c7 00 	sts	0x00C7, r24	; 0x8000c7 <s_o_t_adc>

		s_o_t_f_table[s_o_t_iteration_adc_table] = s_o_t_adc;
     4c4:	c0 91 c9 00 	lds	r28, 0x00C9	; 0x8000c9 <s_o_t_iteration_adc_table>
     4c8:	ec 2f       	mov	r30, r28
     4ca:	f0 e0       	ldi	r31, 0x00	; 0
     4cc:	ee 0f       	add	r30, r30
     4ce:	ff 1f       	adc	r31, r31
     4d0:	e6 53       	subi	r30, 0x36	; 54
     4d2:	ff 4f       	sbci	r31, 0xFF	; 255
     4d4:	91 83       	std	Z+1, r25	; 0x01
     4d6:	80 83       	st	Z, r24
		iteration_adc_motor_table++;
     4d8:	d0 91 02 01 	lds	r29, 0x0102	; 0x800102 <iteration_adc_motor_table>
     4dc:	df 5f       	subi	r29, 0xFF	; 255
     4de:	d0 93 02 01 	sts	0x0102, r29	; 0x800102 <iteration_adc_motor_table>
		s_o_t_iteration_adc_table++;
     4e2:	cf 5f       	subi	r28, 0xFF	; 255
     4e4:	c0 93 c9 00 	sts	0x00C9, r28	; 0x8000c9 <s_o_t_iteration_adc_table>
		filtered_accum_adc_val = filtered_value(accumulator_tab, ACCUMULATOR_SIZE_TAB);
     4e8:	64 e1       	ldi	r22, 0x14	; 20
     4ea:	83 e0       	ldi	r24, 0x03	; 3
     4ec:	91 e0       	ldi	r25, 0x01	; 1
     4ee:	0e 94 ac 01 	call	0x358	; 0x358 <filtered_value>
     4f2:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <filtered_accum_adc_val+0x1>
     4f6:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <filtered_accum_adc_val>
		motor_filter_value = filtered_value(motor_f_table, FILTER_TABLE_SIZE);
     4fa:	6f e0       	ldi	r22, 0x0F	; 15
     4fc:	82 ee       	ldi	r24, 0xE2	; 226
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	0e 94 ac 01 	call	0x358	; 0x358 <filtered_value>
     504:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <motor_filter_value+0x1>
     508:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <motor_filter_value>
		s_o_t_filter_value = filtered_value(s_o_t_f_table, FILTER_TABLE_S_SIZE);
     50c:	6a e0       	ldi	r22, 0x0A	; 10
     50e:	8a ec       	ldi	r24, 0xCA	; 202
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	0e 94 ac 01 	call	0x358	; 0x358 <filtered_value>
     516:	90 93 df 00 	sts	0x00DF, r25	; 0x8000df <s_o_t_filter_value+0x1>
     51a:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <s_o_t_filter_value>
		debug_msg_counter++;
     51e:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <debug_msg_counter>
     522:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <debug_msg_counter+0x1>
     526:	a0 91 c1 00 	lds	r26, 0x00C1	; 0x8000c1 <debug_msg_counter+0x2>
     52a:	b0 91 c2 00 	lds	r27, 0x00C2	; 0x8000c2 <debug_msg_counter+0x3>
     52e:	01 96       	adiw	r24, 0x01	; 1
     530:	a1 1d       	adc	r26, r1
     532:	b1 1d       	adc	r27, r1
     534:	80 93 bf 00 	sts	0x00BF, r24	; 0x8000bf <debug_msg_counter>
     538:	90 93 c0 00 	sts	0x00C0, r25	; 0x8000c0 <debug_msg_counter+0x1>
     53c:	a0 93 c1 00 	sts	0x00C1, r26	; 0x8000c1 <debug_msg_counter+0x2>
     540:	b0 93 c2 00 	sts	0x00C2, r27	; 0x8000c2 <debug_msg_counter+0x3>
		
		if (iteration_adc_accum_table == ACCUMULATOR_SIZE_TAB) iteration_adc_accum_table = 0;
     544:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <iteration_adc_accum_table>
     548:	84 31       	cpi	r24, 0x14	; 20
     54a:	11 f4       	brne	.+4      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
     54c:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <iteration_adc_accum_table>
		if (s_o_t_iteration_adc_table == FILTER_TABLE_S_SIZE) s_o_t_iteration_adc_table = 0;
     550:	ca 30       	cpi	r28, 0x0A	; 10
     552:	11 f4       	brne	.+4      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
     554:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <s_o_t_iteration_adc_table>
		if (iteration_adc_motor_table == FILTER_TABLE_SIZE) iteration_adc_motor_table = 0;
     558:	df 30       	cpi	r29, 0x0F	; 15
     55a:	11 f4       	brne	.+4      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
     55c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <iteration_adc_motor_table>
	}
}
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	ff 90       	pop	r15
     566:	ef 90       	pop	r14
     568:	df 90       	pop	r13
     56a:	cf 90       	pop	r12
     56c:	08 95       	ret

0000056e <measure_get_filtered_value>:

uint16_t measure_get_filtered_value(_type_measure type)
{
    switch(type)
     56e:	83 30       	cpi	r24, 0x03	; 3
     570:	18 f4       	brcc	.+6      	; 0x578 <measure_get_filtered_value+0xa>
     572:	81 30       	cpi	r24, 0x01	; 1
     574:	40 f0       	brcs	.+16     	; 0x586 <measure_get_filtered_value+0x18>
     576:	0c c0       	rjmp	.+24     	; 0x590 <measure_get_filtered_value+0x22>
     578:	83 30       	cpi	r24, 0x03	; 3
     57a:	79 f4       	brne	.+30     	; 0x59a <measure_get_filtered_value+0x2c>
    {
        case MEAS_ACCUM:
        return filtered_accum_adc_val;
     57c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <filtered_accum_adc_val>
     580:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <filtered_accum_adc_val+0x1>
     584:	08 95       	ret
        break;

        case MEAS_MOTOR:
        return motor_filter_value;
     586:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <motor_filter_value>
     58a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <motor_filter_value+0x1>
     58e:	08 95       	ret
        break;

        case MEAS_SERVO:
		case MEAS_TEMPERATURE:
        return s_o_t_filter_value;
     590:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <s_o_t_filter_value>
     594:	90 91 df 00 	lds	r25, 0x00DF	; 0x8000df <s_o_t_filter_value+0x1>
     598:	08 95       	ret
        break;
    }
	return 0;
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	90 e0       	ldi	r25, 0x00	; 0
}
     59e:	08 95       	ret

000005a0 <servo_init>:
	//debug_msg("REG: close %d, open %d, pwm %d\n", min, max, pwm);
	set_pwm(value);
}

void servo_init(uint8_t prescaler)
{
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
	(void) prescaler;
	#if !TEST_APP
	ICR1 = 19999;
     5a4:	2f e1       	ldi	r18, 0x1F	; 31
     5a6:	3e e4       	ldi	r19, 0x4E	; 78
     5a8:	37 bd       	out	0x27, r19	; 39
     5aa:	26 bd       	out	0x26, r18	; 38
	DDRD |= (1 << 4) | (1<<5); //?????????? TO DO
     5ac:	81 b3       	in	r24, 0x11	; 17
     5ae:	80 63       	ori	r24, 0x30	; 48
     5b0:	81 bb       	out	0x11, r24	; 17
	// set TOP to 16bit
	OCR1B = 0x0;
     5b2:	19 bc       	out	0x29, r1	; 41
     5b4:	18 bc       	out	0x28, r1	; 40
	OCR1A = 0x0;
     5b6:	1b bc       	out	0x2b, r1	; 43
     5b8:	1a bc       	out	0x2a, r1	; 42
	TCCR1A |= (1 << WGM11);
     5ba:	8f b5       	in	r24, 0x2f	; 47
     5bc:	82 60       	ori	r24, 0x02	; 2
     5be:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12)|(1 << WGM13);
     5c0:	8e b5       	in	r24, 0x2e	; 46
     5c2:	88 61       	ori	r24, 0x18	; 24
     5c4:	8e bd       	out	0x2e, r24	; 46
	TCCR1A |=  (1<<COM1A1); //(1 << COM1B1) |
     5c6:	8f b5       	in	r24, 0x2f	; 47
     5c8:	80 68       	ori	r24, 0x80	; 128
     5ca:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<CS11);
     5cc:	8e b5       	in	r24, 0x2e	; 46
     5ce:	82 60       	ori	r24, 0x02	; 2
     5d0:	8e bd       	out	0x2e, r24	; 46
static uint8_t try_count = 0;

static void set_pwm(uint16_t pwm)
{
	#if !TEST_APP
	OCR1A = pwm;
     5d2:	3b bd       	out	0x2b, r19	; 43
     5d4:	2a bd       	out	0x2a, r18	; 42
	TCCR1A |= (1 << WGM11);
	TCCR1B |= (1 << WGM12)|(1 << WGM13);
	TCCR1A |=  (1<<COM1A1); //(1 << COM1B1) |
	TCCR1B |= (1<<CS11);
	set_pwm(19999);
	LED_SERVO_OFF;
     5d6:	96 98       	cbi	0x12, 6	; 18
static uint8_t try_count = 0;

static void set_pwm(uint16_t pwm)
{
	#if !TEST_APP
	OCR1A = pwm;
     5d8:	1b bc       	out	0x2b, r1	; 43
     5da:	1a bc       	out	0x2a, r1	; 42
	TCCR1B |= (1<<CS11);
	set_pwm(19999);
	LED_SERVO_OFF;
	#endif
	servo_set_pwm_val((uint16_t)0);
	servoD.state = SERVO_CLOSE;
     5dc:	cc e8       	ldi	r28, 0x8C	; 140
     5de:	d2 e0       	ldi	r29, 0x02	; 2
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	88 83       	st	Y, r24
	servoD.value = 0;
     5e4:	1b 82       	std	Y+3, r1	; 0x03
	evTime_init(&servoD.timeout);
     5e6:	80 e9       	ldi	r24, 0x90	; 144
     5e8:	92 e0       	ldi	r25, 0x02	; 2
     5ea:	0e 94 85 03 	call	0x70a	; 0x70a <evTime_init>
	servoD.try_cnt = 0;
     5ee:	19 86       	std	Y+9, r1	; 0x09
	try_count = 0;
	debug_msg("SERVO: init\n");
     5f0:	89 ea       	ldi	r24, 0xA9	; 169
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	9f 93       	push	r25
     5f6:	8f 93       	push	r24
     5f8:	0e 94 ca 00 	call	0x194	; 0x194 <debug_msg>
}
     5fc:	0f 90       	pop	r0
     5fe:	0f 90       	pop	r0
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	08 95       	ret

00000606 <servo_process>:

void servo_process(uint16_t value)
{
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	ec 01       	movw	r28, r24
	static evTime servo_timer;
	if (evTime_process_period(&servo_timer, 75))
     60c:	4b e4       	ldi	r20, 0x4B	; 75
     60e:	50 e0       	ldi	r21, 0x00	; 0
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	80 e3       	ldi	r24, 0x30	; 48
     616:	91 e0       	ldi	r25, 0x01	; 1
     618:	0e 94 c5 03 	call	0x78a	; 0x78a <evTime_process_period>
     61c:	89 2b       	or	r24, r25
     61e:	11 f0       	breq	.+4      	; 0x624 <servo_process+0x1e>
static uint8_t try_count = 0;

static void set_pwm(uint16_t pwm)
{
	#if !TEST_APP
	OCR1A = pwm;
     620:	db bd       	out	0x2b, r29	; 43
     622:	ca bd       	out	0x2a, r28	; 42
	static evTime servo_timer;
	if (evTime_process_period(&servo_timer, 75))
	{
		servo_set_pwm_val((uint16_t)value);
	}
}
     624:	df 91       	pop	r29
     626:	cf 91       	pop	r28
     628:	08 95       	ret

0000062a <init_system>:
extern uint8_t servo_vibro_value;

extern uint8_t motor_value;

void init_system(void)
{
     62a:	08 95       	ret

0000062c <on_system>:

}

void on_system(void)
{
	dcmotorpwm_init();	
     62c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <dcmotorpwm_init>
	servo_init(0);
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <servo_init>
	init_measure();
     636:	0e 94 be 01 	call	0x37c	; 0x37c <init_measure>
	system_events = 0;
	SET_PIN(system_events, EV_SYSTEM_STATE);
     63a:	81 e0       	ldi	r24, 0x01	; 1
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <system_events+0x1>
     642:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <system_events>
     646:	08 95       	ret

00000648 <__vector_10>:
}

int evTime_off(evTime * evt)
{
	return evt->time_state == TIMER_OFF;
}
     648:	1f 92       	push	r1
     64a:	0f 92       	push	r0
     64c:	0f b6       	in	r0, 0x3f	; 63
     64e:	0f 92       	push	r0
     650:	11 24       	eor	r1, r1
     652:	2f 93       	push	r18
     654:	8f 93       	push	r24
     656:	9f 93       	push	r25
     658:	af 93       	push	r26
     65a:	bf 93       	push	r27
     65c:	ef 93       	push	r30
     65e:	ff 93       	push	r31
     660:	e6 e9       	ldi	r30, 0x96	; 150
     662:	f2 e0       	ldi	r31, 0x02	; 2
     664:	80 81       	ld	r24, Z
     666:	91 81       	ldd	r25, Z+1	; 0x01
     668:	c2 96       	adiw	r24, 0x32	; 50
     66a:	91 83       	std	Z+1, r25	; 0x01
     66c:	80 83       	st	Z, r24
     66e:	80 81       	ld	r24, Z
     670:	91 81       	ldd	r25, Z+1	; 0x01
     672:	88 3e       	cpi	r24, 0xE8	; 232
     674:	93 40       	sbci	r25, 0x03	; 3
     676:	88 f0       	brcs	.+34     	; 0x69a <__vector_10+0x52>
     678:	82 81       	ldd	r24, Z+2	; 0x02
     67a:	93 81       	ldd	r25, Z+3	; 0x03
     67c:	a4 81       	ldd	r26, Z+4	; 0x04
     67e:	b5 81       	ldd	r27, Z+5	; 0x05
     680:	01 96       	adiw	r24, 0x01	; 1
     682:	a1 1d       	adc	r26, r1
     684:	b1 1d       	adc	r27, r1
     686:	82 83       	std	Z+2, r24	; 0x02
     688:	93 83       	std	Z+3, r25	; 0x03
     68a:	a4 83       	std	Z+4, r26	; 0x04
     68c:	b5 83       	std	Z+5, r27	; 0x05
     68e:	80 81       	ld	r24, Z
     690:	91 81       	ldd	r25, Z+1	; 0x01
     692:	88 5e       	subi	r24, 0xE8	; 232
     694:	93 40       	sbci	r25, 0x03	; 3
     696:	91 83       	std	Z+1, r25	; 0x01
     698:	80 83       	st	Z, r24
     69a:	ff 91       	pop	r31
     69c:	ef 91       	pop	r30
     69e:	bf 91       	pop	r27
     6a0:	af 91       	pop	r26
     6a2:	9f 91       	pop	r25
     6a4:	8f 91       	pop	r24
     6a6:	2f 91       	pop	r18
     6a8:	0f 90       	pop	r0
     6aa:	0f be       	out	0x3f, r0	; 63
     6ac:	0f 90       	pop	r0
     6ae:	1f 90       	pop	r1
     6b0:	18 95       	reti

000006b2 <timer0_init>:
     6b2:	93 b7       	in	r25, 0x33	; 51
     6b4:	98 60       	ori	r25, 0x08	; 8
     6b6:	93 bf       	out	0x33, r25	; 51
     6b8:	6c bf       	out	0x3c, r22	; 60
     6ba:	82 30       	cpi	r24, 0x02	; 2
     6bc:	99 f0       	breq	.+38     	; 0x6e4 <timer0_init+0x32>
     6be:	28 f4       	brcc	.+10     	; 0x6ca <timer0_init+0x18>
     6c0:	88 23       	and	r24, r24
     6c2:	41 f0       	breq	.+16     	; 0x6d4 <timer0_init+0x22>
     6c4:	81 30       	cpi	r24, 0x01	; 1
     6c6:	51 f0       	breq	.+20     	; 0x6dc <timer0_init+0x2a>
     6c8:	19 c0       	rjmp	.+50     	; 0x6fc <timer0_init+0x4a>
     6ca:	83 30       	cpi	r24, 0x03	; 3
     6cc:	79 f0       	breq	.+30     	; 0x6ec <timer0_init+0x3a>
     6ce:	84 30       	cpi	r24, 0x04	; 4
     6d0:	89 f0       	breq	.+34     	; 0x6f4 <timer0_init+0x42>
     6d2:	14 c0       	rjmp	.+40     	; 0x6fc <timer0_init+0x4a>
     6d4:	83 b7       	in	r24, 0x33	; 51
     6d6:	81 60       	ori	r24, 0x01	; 1
     6d8:	83 bf       	out	0x33, r24	; 51
     6da:	13 c0       	rjmp	.+38     	; 0x702 <timer0_init+0x50>
     6dc:	83 b7       	in	r24, 0x33	; 51
     6de:	82 60       	ori	r24, 0x02	; 2
     6e0:	83 bf       	out	0x33, r24	; 51
     6e2:	0f c0       	rjmp	.+30     	; 0x702 <timer0_init+0x50>
     6e4:	83 b7       	in	r24, 0x33	; 51
     6e6:	83 60       	ori	r24, 0x03	; 3
     6e8:	83 bf       	out	0x33, r24	; 51
     6ea:	0b c0       	rjmp	.+22     	; 0x702 <timer0_init+0x50>
     6ec:	83 b7       	in	r24, 0x33	; 51
     6ee:	84 60       	ori	r24, 0x04	; 4
     6f0:	83 bf       	out	0x33, r24	; 51
     6f2:	07 c0       	rjmp	.+14     	; 0x702 <timer0_init+0x50>
     6f4:	83 b7       	in	r24, 0x33	; 51
     6f6:	85 60       	ori	r24, 0x05	; 5
     6f8:	83 bf       	out	0x33, r24	; 51
     6fa:	03 c0       	rjmp	.+6      	; 0x702 <timer0_init+0x50>
     6fc:	83 b7       	in	r24, 0x33	; 51
     6fe:	81 60       	ori	r24, 0x01	; 1
     700:	83 bf       	out	0x33, r24	; 51
     702:	89 b7       	in	r24, 0x39	; 57
     704:	82 60       	ori	r24, 0x02	; 2
     706:	89 bf       	out	0x39, r24	; 57
     708:	08 95       	ret

0000070a <evTime_init>:
     70a:	23 e0       	ldi	r18, 0x03	; 3
     70c:	fc 01       	movw	r30, r24
     70e:	24 83       	std	Z+4, r18	; 0x04
     710:	10 82       	st	Z, r1
     712:	11 82       	std	Z+1, r1	; 0x01
     714:	12 82       	std	Z+2, r1	; 0x02
     716:	13 82       	std	Z+3, r1	; 0x03
     718:	08 95       	ret

0000071a <evTime_start>:
     71a:	0f 93       	push	r16
     71c:	1f 93       	push	r17
     71e:	21 e0       	ldi	r18, 0x01	; 1
     720:	fc 01       	movw	r30, r24
     722:	24 83       	std	Z+4, r18	; 0x04
     724:	00 91 98 02 	lds	r16, 0x0298	; 0x800298 <mktime+0x2>
     728:	10 91 99 02 	lds	r17, 0x0299	; 0x800299 <mktime+0x3>
     72c:	20 91 9a 02 	lds	r18, 0x029A	; 0x80029a <mktime+0x4>
     730:	30 91 9b 02 	lds	r19, 0x029B	; 0x80029b <mktime+0x5>
     734:	40 0f       	add	r20, r16
     736:	51 1f       	adc	r21, r17
     738:	62 1f       	adc	r22, r18
     73a:	73 1f       	adc	r23, r19
     73c:	40 83       	st	Z, r20
     73e:	51 83       	std	Z+1, r21	; 0x01
     740:	62 83       	std	Z+2, r22	; 0x02
     742:	73 83       	std	Z+3, r23	; 0x03
     744:	1f 91       	pop	r17
     746:	0f 91       	pop	r16
     748:	08 95       	ret

0000074a <evTime_check>:
     74a:	fc 01       	movw	r30, r24
     74c:	84 81       	ldd	r24, Z+4	; 0x04
     74e:	81 30       	cpi	r24, 0x01	; 1
     750:	b1 f4       	brne	.+44     	; 0x77e <evTime_check+0x34>
     752:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <mktime+0x2>
     756:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <mktime+0x3>
     75a:	a0 91 9a 02 	lds	r26, 0x029A	; 0x80029a <mktime+0x4>
     75e:	b0 91 9b 02 	lds	r27, 0x029B	; 0x80029b <mktime+0x5>
     762:	40 81       	ld	r20, Z
     764:	51 81       	ldd	r21, Z+1	; 0x01
     766:	62 81       	ldd	r22, Z+2	; 0x02
     768:	73 81       	ldd	r23, Z+3	; 0x03
     76a:	48 17       	cp	r20, r24
     76c:	59 07       	cpc	r21, r25
     76e:	6a 07       	cpc	r22, r26
     770:	7b 07       	cpc	r23, r27
     772:	40 f4       	brcc	.+16     	; 0x784 <evTime_check+0x3a>
     774:	82 e0       	ldi	r24, 0x02	; 2
     776:	84 83       	std	Z+4, r24	; 0x04
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	08 95       	ret
     77e:	8f ef       	ldi	r24, 0xFF	; 255
     780:	9f ef       	ldi	r25, 0xFF	; 255
     782:	08 95       	ret
     784:	80 e0       	ldi	r24, 0x00	; 0
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	08 95       	ret

0000078a <evTime_process_period>:

int evTime_process_period(evTime * timer, uint32_t period)
{
     78a:	cf 92       	push	r12
     78c:	df 92       	push	r13
     78e:	ef 92       	push	r14
     790:	ff 92       	push	r15
     792:	0f 93       	push	r16
     794:	1f 93       	push	r17
     796:	cf 93       	push	r28
     798:	df 93       	push	r29
     79a:	ec 01       	movw	r28, r24
     79c:	6a 01       	movw	r12, r20
     79e:	7b 01       	movw	r14, r22
	static int ret_val;
	if (timer->time_state == TIMER_NO_INIT) evTime_init(timer);
     7a0:	8c 81       	ldd	r24, Y+4	; 0x04
     7a2:	81 11       	cpse	r24, r1
     7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <evTime_process_period+0x28>
	#endif
}

void evTime_init(evTime * evt)
{
	evt->time_state = TIMER_OFF;
     7a6:	83 e0       	ldi	r24, 0x03	; 3
     7a8:	8c 83       	std	Y+4, r24	; 0x04
	evt->timer = 0;
     7aa:	18 82       	st	Y, r1
     7ac:	19 82       	std	Y+1, r1	; 0x01
     7ae:	1a 82       	std	Y+2, r1	; 0x02
     7b0:	1b 82       	std	Y+3, r1	; 0x03

int evTime_process_period(evTime * timer, uint32_t period)
{
	static int ret_val;
	if (timer->time_state == TIMER_NO_INIT) evTime_init(timer);
	ret_val = evTime_check(timer);
     7b2:	ce 01       	movw	r24, r28
     7b4:	0e 94 a5 03 	call	0x74a	; 0x74a <evTime_check>
     7b8:	8c 01       	movw	r16, r24
	if (ret_val == 1)
     7ba:	01 97       	sbiw	r24, 0x01	; 1
     7bc:	31 f4       	brne	.+12     	; 0x7ca <evTime_process_period+0x40>
	{
		evTime_start(timer, period);
     7be:	b7 01       	movw	r22, r14
     7c0:	a6 01       	movw	r20, r12
     7c2:	ce 01       	movw	r24, r28
     7c4:	0e 94 8d 03 	call	0x71a	; 0x71a <evTime_start>
		return 1;
     7c8:	0d c0       	rjmp	.+26     	; 0x7e4 <evTime_process_period+0x5a>
	}
	else if (evTime_off(timer))
     7ca:	8c 81       	ldd	r24, Y+4	; 0x04
     7cc:	83 30       	cpi	r24, 0x03	; 3
     7ce:	41 f4       	brne	.+16     	; 0x7e0 <evTime_process_period+0x56>
	{
		evTime_start(timer, period);
     7d0:	b7 01       	movw	r22, r14
     7d2:	a6 01       	movw	r20, r12
     7d4:	ce 01       	movw	r24, r28
     7d6:	0e 94 8d 03 	call	0x71a	; 0x71a <evTime_start>
	}
	return 0;
     7da:	00 e0       	ldi	r16, 0x00	; 0
     7dc:	10 e0       	ldi	r17, 0x00	; 0
     7de:	02 c0       	rjmp	.+4      	; 0x7e4 <evTime_process_period+0x5a>
     7e0:	00 e0       	ldi	r16, 0x00	; 0
     7e2:	10 e0       	ldi	r17, 0x00	; 0
}
     7e4:	c8 01       	movw	r24, r16
     7e6:	df 91       	pop	r29
     7e8:	cf 91       	pop	r28
     7ea:	1f 91       	pop	r17
     7ec:	0f 91       	pop	r16
     7ee:	ff 90       	pop	r15
     7f0:	ef 90       	pop	r14
     7f2:	df 90       	pop	r13
     7f4:	cf 90       	pop	r12
     7f6:	08 95       	ret

000007f8 <__vector_13>:
	/* get data from receive buffer */
	data = UART_RxBuf[tmptail];

	return (UART_LastRxError << 8) + data;

} /* uart0_peek */
     7f8:	1f 92       	push	r1
     7fa:	0f 92       	push	r0
     7fc:	0f b6       	in	r0, 0x3f	; 63
     7fe:	0f 92       	push	r0
     800:	11 24       	eor	r1, r1
     802:	2f 93       	push	r18
     804:	3f 93       	push	r19
     806:	4f 93       	push	r20
     808:	5f 93       	push	r21
     80a:	8f 93       	push	r24
     80c:	9f 93       	push	r25
     80e:	ef 93       	push	r30
     810:	ff 93       	push	r31
     812:	2b b1       	in	r18, 0x0b	; 11
     814:	3c b1       	in	r19, 0x0c	; 12
     816:	28 71       	andi	r18, 0x18	; 24
     818:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <UART_RxHead>
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	01 96       	adiw	r24, 0x01	; 1
     820:	8f 77       	andi	r24, 0x7F	; 127
     822:	99 27       	eor	r25, r25
     824:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <UART_RxTail>
     828:	50 e0       	ldi	r21, 0x00	; 0
     82a:	84 17       	cp	r24, r20
     82c:	95 07       	cpc	r25, r21
     82e:	39 f0       	breq	.+14     	; 0x83e <__vector_13+0x46>
     830:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <UART_RxHead>
     834:	fc 01       	movw	r30, r24
     836:	e6 5c       	subi	r30, 0xC6	; 198
     838:	fe 4f       	sbci	r31, 0xFE	; 254
     83a:	30 83       	st	Z, r19
     83c:	01 c0       	rjmp	.+2      	; 0x840 <__vector_13+0x48>
     83e:	22 e0       	ldi	r18, 0x02	; 2
     840:	20 93 35 01 	sts	0x0135, r18	; 0x800135 <UART_LastRxError>
     844:	ff 91       	pop	r31
     846:	ef 91       	pop	r30
     848:	9f 91       	pop	r25
     84a:	8f 91       	pop	r24
     84c:	5f 91       	pop	r21
     84e:	4f 91       	pop	r20
     850:	3f 91       	pop	r19
     852:	2f 91       	pop	r18
     854:	0f 90       	pop	r0
     856:	0f be       	out	0x3f, r0	; 63
     858:	0f 90       	pop	r0
     85a:	1f 90       	pop	r1
     85c:	18 95       	reti

0000085e <__vector_14>:
     85e:	1f 92       	push	r1
     860:	0f 92       	push	r0
     862:	0f b6       	in	r0, 0x3f	; 63
     864:	0f 92       	push	r0
     866:	11 24       	eor	r1, r1
     868:	8f 93       	push	r24
     86a:	9f 93       	push	r25
     86c:	ef 93       	push	r30
     86e:	ff 93       	push	r31
     870:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <UART_TxHead>
     874:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <UART_TxTail>
     878:	98 17       	cp	r25, r24
     87a:	71 f0       	breq	.+28     	; 0x898 <__stack+0x39>
     87c:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <UART_TxTail>
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	01 96       	adiw	r24, 0x01	; 1
     884:	8f 77       	andi	r24, 0x7F	; 127
     886:	99 27       	eor	r25, r25
     888:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <UART_TxTail>
     88c:	fc 01       	movw	r30, r24
     88e:	e6 54       	subi	r30, 0x46	; 70
     890:	fe 4f       	sbci	r31, 0xFE	; 254
     892:	80 81       	ld	r24, Z
     894:	8c b9       	out	0x0c, r24	; 12
     896:	01 c0       	rjmp	.+2      	; 0x89a <__stack+0x3b>
     898:	55 98       	cbi	0x0a, 5	; 10
     89a:	ff 91       	pop	r31
     89c:	ef 91       	pop	r30
     89e:	9f 91       	pop	r25
     8a0:	8f 91       	pop	r24
     8a2:	0f 90       	pop	r0
     8a4:	0f be       	out	0x3f, r0	; 63
     8a6:	0f 90       	pop	r0
     8a8:	1f 90       	pop	r1
     8aa:	18 95       	reti

000008ac <uart0_init>:
     8ac:	f8 94       	cli
     8ae:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <UART_TxHead>
     8b2:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <UART_TxTail>
     8b6:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <UART_RxHead>
     8ba:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <UART_RxTail>
     8be:	78 94       	sei
     8c0:	99 23       	and	r25, r25
     8c2:	1c f4       	brge	.+6      	; 0x8ca <uart0_init+0x1e>
     8c4:	22 e0       	ldi	r18, 0x02	; 2
     8c6:	2b b9       	out	0x0b, r18	; 11
     8c8:	9f 77       	andi	r25, 0x7F	; 127
     8ca:	90 bd       	out	0x20, r25	; 32
     8cc:	89 b9       	out	0x09, r24	; 9
     8ce:	88 e9       	ldi	r24, 0x98	; 152
     8d0:	8a b9       	out	0x0a, r24	; 10
     8d2:	86 e8       	ldi	r24, 0x86	; 134
     8d4:	80 bd       	out	0x20, r24	; 32
     8d6:	08 95       	ret

000008d8 <uart0_putc>:
		}
	} while (tmphead == txtail_tmp); /* wait for free space in buffer */
#else
	uint16_t tmphead;
	
	tmphead = (UART_TxHead + 1) & UART_TX0_BUFFER_MASK;
     8d8:	40 91 39 01 	lds	r20, 0x0139	; 0x800139 <UART_TxHead>
     8dc:	50 e0       	ldi	r21, 0x00	; 0
     8de:	4f 5f       	subi	r20, 0xFF	; 255
     8e0:	5f 4f       	sbci	r21, 0xFF	; 255
     8e2:	4f 77       	andi	r20, 0x7F	; 127
     8e4:	55 27       	eor	r21, r21
	
	while (tmphead == UART_TxTail); /* wait for free space in buffer */
     8e6:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <UART_TxTail>
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	42 17       	cp	r20, r18
     8ee:	53 07       	cpc	r21, r19
     8f0:	d1 f3       	breq	.-12     	; 0x8e6 <uart0_putc+0xe>
#endif

	UART_TxBuf[tmphead] = data;
     8f2:	fa 01       	movw	r30, r20
     8f4:	e6 54       	subi	r30, 0x46	; 70
     8f6:	fe 4f       	sbci	r31, 0xFE	; 254
     8f8:	80 83       	st	Z, r24
	UART_TxHead = tmphead;
     8fa:	40 93 39 01 	sts	0x0139, r20	; 0x800139 <UART_TxHead>

	/* enable UDRE interrupt */
	UART0_CONTROL |= _BV(UART0_UDRIE);
     8fe:	55 9a       	sbi	0x0a, 5	; 10
     900:	08 95       	ret

00000902 <uart0_puts>:
Purpose:  transmit string to UART
Input:    string to be transmitted
Returns:  none
**************************************************************************/
void uart0_puts(const char *s)
{
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	ec 01       	movw	r28, r24
	while (*s) {
     908:	88 81       	ld	r24, Y
     90a:	88 23       	and	r24, r24
     90c:	31 f0       	breq	.+12     	; 0x91a <uart0_puts+0x18>
     90e:	21 96       	adiw	r28, 0x01	; 1
		uart0_putc(*s++);
     910:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <uart0_putc>
Input:    string to be transmitted
Returns:  none
**************************************************************************/
void uart0_puts(const char *s)
{
	while (*s) {
     914:	89 91       	ld	r24, Y+
     916:	81 11       	cpse	r24, r1
     918:	fb cf       	rjmp	.-10     	; 0x910 <uart0_puts+0xe>
		uart0_putc(*s++);
	}

} /* uart0_puts */
     91a:	df 91       	pop	r29
     91c:	cf 91       	pop	r28
     91e:	08 95       	ret

00000920 <__subsf3>:
     920:	50 58       	subi	r21, 0x80	; 128

00000922 <__addsf3>:
     922:	bb 27       	eor	r27, r27
     924:	aa 27       	eor	r26, r26
     926:	0e 94 a8 04 	call	0x950	; 0x950 <__addsf3x>
     92a:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_round>
     92e:	0e 94 72 05 	call	0xae4	; 0xae4 <__fp_pscA>
     932:	38 f0       	brcs	.+14     	; 0x942 <__addsf3+0x20>
     934:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__fp_pscB>
     938:	20 f0       	brcs	.+8      	; 0x942 <__addsf3+0x20>
     93a:	39 f4       	brne	.+14     	; 0x94a <__addsf3+0x28>
     93c:	9f 3f       	cpi	r25, 0xFF	; 255
     93e:	19 f4       	brne	.+6      	; 0x946 <__addsf3+0x24>
     940:	26 f4       	brtc	.+8      	; 0x94a <__addsf3+0x28>
     942:	0c 94 6f 05 	jmp	0xade	; 0xade <__fp_nan>
     946:	0e f4       	brtc	.+2      	; 0x94a <__addsf3+0x28>
     948:	e0 95       	com	r30
     94a:	e7 fb       	bst	r30, 7
     94c:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_inf>

00000950 <__addsf3x>:
     950:	e9 2f       	mov	r30, r25
     952:	0e 94 91 05 	call	0xb22	; 0xb22 <__fp_split3>
     956:	58 f3       	brcs	.-42     	; 0x92e <__addsf3+0xc>
     958:	ba 17       	cp	r27, r26
     95a:	62 07       	cpc	r22, r18
     95c:	73 07       	cpc	r23, r19
     95e:	84 07       	cpc	r24, r20
     960:	95 07       	cpc	r25, r21
     962:	20 f0       	brcs	.+8      	; 0x96c <__addsf3x+0x1c>
     964:	79 f4       	brne	.+30     	; 0x984 <__addsf3x+0x34>
     966:	a6 f5       	brtc	.+104    	; 0x9d0 <__addsf3x+0x80>
     968:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_zero>
     96c:	0e f4       	brtc	.+2      	; 0x970 <__addsf3x+0x20>
     96e:	e0 95       	com	r30
     970:	0b 2e       	mov	r0, r27
     972:	ba 2f       	mov	r27, r26
     974:	a0 2d       	mov	r26, r0
     976:	0b 01       	movw	r0, r22
     978:	b9 01       	movw	r22, r18
     97a:	90 01       	movw	r18, r0
     97c:	0c 01       	movw	r0, r24
     97e:	ca 01       	movw	r24, r20
     980:	a0 01       	movw	r20, r0
     982:	11 24       	eor	r1, r1
     984:	ff 27       	eor	r31, r31
     986:	59 1b       	sub	r21, r25
     988:	99 f0       	breq	.+38     	; 0x9b0 <__addsf3x+0x60>
     98a:	59 3f       	cpi	r21, 0xF9	; 249
     98c:	50 f4       	brcc	.+20     	; 0x9a2 <__addsf3x+0x52>
     98e:	50 3e       	cpi	r21, 0xE0	; 224
     990:	68 f1       	brcs	.+90     	; 0x9ec <__addsf3x+0x9c>
     992:	1a 16       	cp	r1, r26
     994:	f0 40       	sbci	r31, 0x00	; 0
     996:	a2 2f       	mov	r26, r18
     998:	23 2f       	mov	r18, r19
     99a:	34 2f       	mov	r19, r20
     99c:	44 27       	eor	r20, r20
     99e:	58 5f       	subi	r21, 0xF8	; 248
     9a0:	f3 cf       	rjmp	.-26     	; 0x988 <__addsf3x+0x38>
     9a2:	46 95       	lsr	r20
     9a4:	37 95       	ror	r19
     9a6:	27 95       	ror	r18
     9a8:	a7 95       	ror	r26
     9aa:	f0 40       	sbci	r31, 0x00	; 0
     9ac:	53 95       	inc	r21
     9ae:	c9 f7       	brne	.-14     	; 0x9a2 <__addsf3x+0x52>
     9b0:	7e f4       	brtc	.+30     	; 0x9d0 <__addsf3x+0x80>
     9b2:	1f 16       	cp	r1, r31
     9b4:	ba 0b       	sbc	r27, r26
     9b6:	62 0b       	sbc	r22, r18
     9b8:	73 0b       	sbc	r23, r19
     9ba:	84 0b       	sbc	r24, r20
     9bc:	ba f0       	brmi	.+46     	; 0x9ec <__addsf3x+0x9c>
     9be:	91 50       	subi	r25, 0x01	; 1
     9c0:	a1 f0       	breq	.+40     	; 0x9ea <__addsf3x+0x9a>
     9c2:	ff 0f       	add	r31, r31
     9c4:	bb 1f       	adc	r27, r27
     9c6:	66 1f       	adc	r22, r22
     9c8:	77 1f       	adc	r23, r23
     9ca:	88 1f       	adc	r24, r24
     9cc:	c2 f7       	brpl	.-16     	; 0x9be <__addsf3x+0x6e>
     9ce:	0e c0       	rjmp	.+28     	; 0x9ec <__addsf3x+0x9c>
     9d0:	ba 0f       	add	r27, r26
     9d2:	62 1f       	adc	r22, r18
     9d4:	73 1f       	adc	r23, r19
     9d6:	84 1f       	adc	r24, r20
     9d8:	48 f4       	brcc	.+18     	; 0x9ec <__addsf3x+0x9c>
     9da:	87 95       	ror	r24
     9dc:	77 95       	ror	r23
     9de:	67 95       	ror	r22
     9e0:	b7 95       	ror	r27
     9e2:	f7 95       	ror	r31
     9e4:	9e 3f       	cpi	r25, 0xFE	; 254
     9e6:	08 f0       	brcs	.+2      	; 0x9ea <__addsf3x+0x9a>
     9e8:	b0 cf       	rjmp	.-160    	; 0x94a <__addsf3+0x28>
     9ea:	93 95       	inc	r25
     9ec:	88 0f       	add	r24, r24
     9ee:	08 f0       	brcs	.+2      	; 0x9f2 <__addsf3x+0xa2>
     9f0:	99 27       	eor	r25, r25
     9f2:	ee 0f       	add	r30, r30
     9f4:	97 95       	ror	r25
     9f6:	87 95       	ror	r24
     9f8:	08 95       	ret

000009fa <__fixunssfsi>:
     9fa:	0e 94 99 05 	call	0xb32	; 0xb32 <__fp_splitA>
     9fe:	88 f0       	brcs	.+34     	; 0xa22 <__fixunssfsi+0x28>
     a00:	9f 57       	subi	r25, 0x7F	; 127
     a02:	98 f0       	brcs	.+38     	; 0xa2a <__fixunssfsi+0x30>
     a04:	b9 2f       	mov	r27, r25
     a06:	99 27       	eor	r25, r25
     a08:	b7 51       	subi	r27, 0x17	; 23
     a0a:	b0 f0       	brcs	.+44     	; 0xa38 <__fixunssfsi+0x3e>
     a0c:	e1 f0       	breq	.+56     	; 0xa46 <__fixunssfsi+0x4c>
     a0e:	66 0f       	add	r22, r22
     a10:	77 1f       	adc	r23, r23
     a12:	88 1f       	adc	r24, r24
     a14:	99 1f       	adc	r25, r25
     a16:	1a f0       	brmi	.+6      	; 0xa1e <__fixunssfsi+0x24>
     a18:	ba 95       	dec	r27
     a1a:	c9 f7       	brne	.-14     	; 0xa0e <__fixunssfsi+0x14>
     a1c:	14 c0       	rjmp	.+40     	; 0xa46 <__fixunssfsi+0x4c>
     a1e:	b1 30       	cpi	r27, 0x01	; 1
     a20:	91 f0       	breq	.+36     	; 0xa46 <__fixunssfsi+0x4c>
     a22:	0e 94 b3 05 	call	0xb66	; 0xb66 <__fp_zero>
     a26:	b1 e0       	ldi	r27, 0x01	; 1
     a28:	08 95       	ret
     a2a:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_zero>
     a2e:	67 2f       	mov	r22, r23
     a30:	78 2f       	mov	r23, r24
     a32:	88 27       	eor	r24, r24
     a34:	b8 5f       	subi	r27, 0xF8	; 248
     a36:	39 f0       	breq	.+14     	; 0xa46 <__fixunssfsi+0x4c>
     a38:	b9 3f       	cpi	r27, 0xF9	; 249
     a3a:	cc f3       	brlt	.-14     	; 0xa2e <__fixunssfsi+0x34>
     a3c:	86 95       	lsr	r24
     a3e:	77 95       	ror	r23
     a40:	67 95       	ror	r22
     a42:	b3 95       	inc	r27
     a44:	d9 f7       	brne	.-10     	; 0xa3c <__fixunssfsi+0x42>
     a46:	3e f4       	brtc	.+14     	; 0xa56 <__fixunssfsi+0x5c>
     a48:	90 95       	com	r25
     a4a:	80 95       	com	r24
     a4c:	70 95       	com	r23
     a4e:	61 95       	neg	r22
     a50:	7f 4f       	sbci	r23, 0xFF	; 255
     a52:	8f 4f       	sbci	r24, 0xFF	; 255
     a54:	9f 4f       	sbci	r25, 0xFF	; 255
     a56:	08 95       	ret

00000a58 <__floatunsisf>:
     a58:	e8 94       	clt
     a5a:	09 c0       	rjmp	.+18     	; 0xa6e <__floatsisf+0x12>

00000a5c <__floatsisf>:
     a5c:	97 fb       	bst	r25, 7
     a5e:	3e f4       	brtc	.+14     	; 0xa6e <__floatsisf+0x12>
     a60:	90 95       	com	r25
     a62:	80 95       	com	r24
     a64:	70 95       	com	r23
     a66:	61 95       	neg	r22
     a68:	7f 4f       	sbci	r23, 0xFF	; 255
     a6a:	8f 4f       	sbci	r24, 0xFF	; 255
     a6c:	9f 4f       	sbci	r25, 0xFF	; 255
     a6e:	99 23       	and	r25, r25
     a70:	a9 f0       	breq	.+42     	; 0xa9c <__floatsisf+0x40>
     a72:	f9 2f       	mov	r31, r25
     a74:	96 e9       	ldi	r25, 0x96	; 150
     a76:	bb 27       	eor	r27, r27
     a78:	93 95       	inc	r25
     a7a:	f6 95       	lsr	r31
     a7c:	87 95       	ror	r24
     a7e:	77 95       	ror	r23
     a80:	67 95       	ror	r22
     a82:	b7 95       	ror	r27
     a84:	f1 11       	cpse	r31, r1
     a86:	f8 cf       	rjmp	.-16     	; 0xa78 <__floatsisf+0x1c>
     a88:	fa f4       	brpl	.+62     	; 0xac8 <__floatsisf+0x6c>
     a8a:	bb 0f       	add	r27, r27
     a8c:	11 f4       	brne	.+4      	; 0xa92 <__floatsisf+0x36>
     a8e:	60 ff       	sbrs	r22, 0
     a90:	1b c0       	rjmp	.+54     	; 0xac8 <__floatsisf+0x6c>
     a92:	6f 5f       	subi	r22, 0xFF	; 255
     a94:	7f 4f       	sbci	r23, 0xFF	; 255
     a96:	8f 4f       	sbci	r24, 0xFF	; 255
     a98:	9f 4f       	sbci	r25, 0xFF	; 255
     a9a:	16 c0       	rjmp	.+44     	; 0xac8 <__floatsisf+0x6c>
     a9c:	88 23       	and	r24, r24
     a9e:	11 f0       	breq	.+4      	; 0xaa4 <__floatsisf+0x48>
     aa0:	96 e9       	ldi	r25, 0x96	; 150
     aa2:	11 c0       	rjmp	.+34     	; 0xac6 <__floatsisf+0x6a>
     aa4:	77 23       	and	r23, r23
     aa6:	21 f0       	breq	.+8      	; 0xab0 <__floatsisf+0x54>
     aa8:	9e e8       	ldi	r25, 0x8E	; 142
     aaa:	87 2f       	mov	r24, r23
     aac:	76 2f       	mov	r23, r22
     aae:	05 c0       	rjmp	.+10     	; 0xaba <__floatsisf+0x5e>
     ab0:	66 23       	and	r22, r22
     ab2:	71 f0       	breq	.+28     	; 0xad0 <__floatsisf+0x74>
     ab4:	96 e8       	ldi	r25, 0x86	; 134
     ab6:	86 2f       	mov	r24, r22
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	60 e0       	ldi	r22, 0x00	; 0
     abc:	2a f0       	brmi	.+10     	; 0xac8 <__floatsisf+0x6c>
     abe:	9a 95       	dec	r25
     ac0:	66 0f       	add	r22, r22
     ac2:	77 1f       	adc	r23, r23
     ac4:	88 1f       	adc	r24, r24
     ac6:	da f7       	brpl	.-10     	; 0xabe <__floatsisf+0x62>
     ac8:	88 0f       	add	r24, r24
     aca:	96 95       	lsr	r25
     acc:	87 95       	ror	r24
     ace:	97 f9       	bld	r25, 7
     ad0:	08 95       	ret

00000ad2 <__fp_inf>:
     ad2:	97 f9       	bld	r25, 7
     ad4:	9f 67       	ori	r25, 0x7F	; 127
     ad6:	80 e8       	ldi	r24, 0x80	; 128
     ad8:	70 e0       	ldi	r23, 0x00	; 0
     ada:	60 e0       	ldi	r22, 0x00	; 0
     adc:	08 95       	ret

00000ade <__fp_nan>:
     ade:	9f ef       	ldi	r25, 0xFF	; 255
     ae0:	80 ec       	ldi	r24, 0xC0	; 192
     ae2:	08 95       	ret

00000ae4 <__fp_pscA>:
     ae4:	00 24       	eor	r0, r0
     ae6:	0a 94       	dec	r0
     ae8:	16 16       	cp	r1, r22
     aea:	17 06       	cpc	r1, r23
     aec:	18 06       	cpc	r1, r24
     aee:	09 06       	cpc	r0, r25
     af0:	08 95       	ret

00000af2 <__fp_pscB>:
     af2:	00 24       	eor	r0, r0
     af4:	0a 94       	dec	r0
     af6:	12 16       	cp	r1, r18
     af8:	13 06       	cpc	r1, r19
     afa:	14 06       	cpc	r1, r20
     afc:	05 06       	cpc	r0, r21
     afe:	08 95       	ret

00000b00 <__fp_round>:
     b00:	09 2e       	mov	r0, r25
     b02:	03 94       	inc	r0
     b04:	00 0c       	add	r0, r0
     b06:	11 f4       	brne	.+4      	; 0xb0c <__fp_round+0xc>
     b08:	88 23       	and	r24, r24
     b0a:	52 f0       	brmi	.+20     	; 0xb20 <__fp_round+0x20>
     b0c:	bb 0f       	add	r27, r27
     b0e:	40 f4       	brcc	.+16     	; 0xb20 <__fp_round+0x20>
     b10:	bf 2b       	or	r27, r31
     b12:	11 f4       	brne	.+4      	; 0xb18 <__fp_round+0x18>
     b14:	60 ff       	sbrs	r22, 0
     b16:	04 c0       	rjmp	.+8      	; 0xb20 <__fp_round+0x20>
     b18:	6f 5f       	subi	r22, 0xFF	; 255
     b1a:	7f 4f       	sbci	r23, 0xFF	; 255
     b1c:	8f 4f       	sbci	r24, 0xFF	; 255
     b1e:	9f 4f       	sbci	r25, 0xFF	; 255
     b20:	08 95       	ret

00000b22 <__fp_split3>:
     b22:	57 fd       	sbrc	r21, 7
     b24:	90 58       	subi	r25, 0x80	; 128
     b26:	44 0f       	add	r20, r20
     b28:	55 1f       	adc	r21, r21
     b2a:	59 f0       	breq	.+22     	; 0xb42 <__fp_splitA+0x10>
     b2c:	5f 3f       	cpi	r21, 0xFF	; 255
     b2e:	71 f0       	breq	.+28     	; 0xb4c <__fp_splitA+0x1a>
     b30:	47 95       	ror	r20

00000b32 <__fp_splitA>:
     b32:	88 0f       	add	r24, r24
     b34:	97 fb       	bst	r25, 7
     b36:	99 1f       	adc	r25, r25
     b38:	61 f0       	breq	.+24     	; 0xb52 <__fp_splitA+0x20>
     b3a:	9f 3f       	cpi	r25, 0xFF	; 255
     b3c:	79 f0       	breq	.+30     	; 0xb5c <__fp_splitA+0x2a>
     b3e:	87 95       	ror	r24
     b40:	08 95       	ret
     b42:	12 16       	cp	r1, r18
     b44:	13 06       	cpc	r1, r19
     b46:	14 06       	cpc	r1, r20
     b48:	55 1f       	adc	r21, r21
     b4a:	f2 cf       	rjmp	.-28     	; 0xb30 <__fp_split3+0xe>
     b4c:	46 95       	lsr	r20
     b4e:	f1 df       	rcall	.-30     	; 0xb32 <__fp_splitA>
     b50:	08 c0       	rjmp	.+16     	; 0xb62 <__fp_splitA+0x30>
     b52:	16 16       	cp	r1, r22
     b54:	17 06       	cpc	r1, r23
     b56:	18 06       	cpc	r1, r24
     b58:	99 1f       	adc	r25, r25
     b5a:	f1 cf       	rjmp	.-30     	; 0xb3e <__fp_splitA+0xc>
     b5c:	86 95       	lsr	r24
     b5e:	71 05       	cpc	r23, r1
     b60:	61 05       	cpc	r22, r1
     b62:	08 94       	sec
     b64:	08 95       	ret

00000b66 <__fp_zero>:
     b66:	e8 94       	clt

00000b68 <__fp_szero>:
     b68:	bb 27       	eor	r27, r27
     b6a:	66 27       	eor	r22, r22
     b6c:	77 27       	eor	r23, r23
     b6e:	cb 01       	movw	r24, r22
     b70:	97 f9       	bld	r25, 7
     b72:	08 95       	ret

00000b74 <__mulsf3>:
     b74:	0e 94 cd 05 	call	0xb9a	; 0xb9a <__mulsf3x>
     b78:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_round>
     b7c:	0e 94 72 05 	call	0xae4	; 0xae4 <__fp_pscA>
     b80:	38 f0       	brcs	.+14     	; 0xb90 <__mulsf3+0x1c>
     b82:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__fp_pscB>
     b86:	20 f0       	brcs	.+8      	; 0xb90 <__mulsf3+0x1c>
     b88:	95 23       	and	r25, r21
     b8a:	11 f0       	breq	.+4      	; 0xb90 <__mulsf3+0x1c>
     b8c:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_inf>
     b90:	0c 94 6f 05 	jmp	0xade	; 0xade <__fp_nan>
     b94:	11 24       	eor	r1, r1
     b96:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <__fp_szero>

00000b9a <__mulsf3x>:
     b9a:	0e 94 91 05 	call	0xb22	; 0xb22 <__fp_split3>
     b9e:	70 f3       	brcs	.-36     	; 0xb7c <__mulsf3+0x8>

00000ba0 <__mulsf3_pse>:
     ba0:	95 9f       	mul	r25, r21
     ba2:	c1 f3       	breq	.-16     	; 0xb94 <__mulsf3+0x20>
     ba4:	95 0f       	add	r25, r21
     ba6:	50 e0       	ldi	r21, 0x00	; 0
     ba8:	55 1f       	adc	r21, r21
     baa:	62 9f       	mul	r22, r18
     bac:	f0 01       	movw	r30, r0
     bae:	72 9f       	mul	r23, r18
     bb0:	bb 27       	eor	r27, r27
     bb2:	f0 0d       	add	r31, r0
     bb4:	b1 1d       	adc	r27, r1
     bb6:	63 9f       	mul	r22, r19
     bb8:	aa 27       	eor	r26, r26
     bba:	f0 0d       	add	r31, r0
     bbc:	b1 1d       	adc	r27, r1
     bbe:	aa 1f       	adc	r26, r26
     bc0:	64 9f       	mul	r22, r20
     bc2:	66 27       	eor	r22, r22
     bc4:	b0 0d       	add	r27, r0
     bc6:	a1 1d       	adc	r26, r1
     bc8:	66 1f       	adc	r22, r22
     bca:	82 9f       	mul	r24, r18
     bcc:	22 27       	eor	r18, r18
     bce:	b0 0d       	add	r27, r0
     bd0:	a1 1d       	adc	r26, r1
     bd2:	62 1f       	adc	r22, r18
     bd4:	73 9f       	mul	r23, r19
     bd6:	b0 0d       	add	r27, r0
     bd8:	a1 1d       	adc	r26, r1
     bda:	62 1f       	adc	r22, r18
     bdc:	83 9f       	mul	r24, r19
     bde:	a0 0d       	add	r26, r0
     be0:	61 1d       	adc	r22, r1
     be2:	22 1f       	adc	r18, r18
     be4:	74 9f       	mul	r23, r20
     be6:	33 27       	eor	r19, r19
     be8:	a0 0d       	add	r26, r0
     bea:	61 1d       	adc	r22, r1
     bec:	23 1f       	adc	r18, r19
     bee:	84 9f       	mul	r24, r20
     bf0:	60 0d       	add	r22, r0
     bf2:	21 1d       	adc	r18, r1
     bf4:	82 2f       	mov	r24, r18
     bf6:	76 2f       	mov	r23, r22
     bf8:	6a 2f       	mov	r22, r26
     bfa:	11 24       	eor	r1, r1
     bfc:	9f 57       	subi	r25, 0x7F	; 127
     bfe:	50 40       	sbci	r21, 0x00	; 0
     c00:	9a f0       	brmi	.+38     	; 0xc28 <__mulsf3_pse+0x88>
     c02:	f1 f0       	breq	.+60     	; 0xc40 <__mulsf3_pse+0xa0>
     c04:	88 23       	and	r24, r24
     c06:	4a f0       	brmi	.+18     	; 0xc1a <__mulsf3_pse+0x7a>
     c08:	ee 0f       	add	r30, r30
     c0a:	ff 1f       	adc	r31, r31
     c0c:	bb 1f       	adc	r27, r27
     c0e:	66 1f       	adc	r22, r22
     c10:	77 1f       	adc	r23, r23
     c12:	88 1f       	adc	r24, r24
     c14:	91 50       	subi	r25, 0x01	; 1
     c16:	50 40       	sbci	r21, 0x00	; 0
     c18:	a9 f7       	brne	.-22     	; 0xc04 <__mulsf3_pse+0x64>
     c1a:	9e 3f       	cpi	r25, 0xFE	; 254
     c1c:	51 05       	cpc	r21, r1
     c1e:	80 f0       	brcs	.+32     	; 0xc40 <__mulsf3_pse+0xa0>
     c20:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_inf>
     c24:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <__fp_szero>
     c28:	5f 3f       	cpi	r21, 0xFF	; 255
     c2a:	e4 f3       	brlt	.-8      	; 0xc24 <__mulsf3_pse+0x84>
     c2c:	98 3e       	cpi	r25, 0xE8	; 232
     c2e:	d4 f3       	brlt	.-12     	; 0xc24 <__mulsf3_pse+0x84>
     c30:	86 95       	lsr	r24
     c32:	77 95       	ror	r23
     c34:	67 95       	ror	r22
     c36:	b7 95       	ror	r27
     c38:	f7 95       	ror	r31
     c3a:	e7 95       	ror	r30
     c3c:	9f 5f       	subi	r25, 0xFF	; 255
     c3e:	c1 f7       	brne	.-16     	; 0xc30 <__mulsf3_pse+0x90>
     c40:	fe 2b       	or	r31, r30
     c42:	88 0f       	add	r24, r24
     c44:	91 1d       	adc	r25, r1
     c46:	96 95       	lsr	r25
     c48:	87 95       	ror	r24
     c4a:	97 f9       	bld	r25, 7
     c4c:	08 95       	ret

00000c4e <vfprintf>:
     c4e:	a0 e1       	ldi	r26, 0x10	; 16
     c50:	b0 e0       	ldi	r27, 0x00	; 0
     c52:	ed e2       	ldi	r30, 0x2D	; 45
     c54:	f6 e0       	ldi	r31, 0x06	; 6
     c56:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__prologue_saves__>
     c5a:	7c 01       	movw	r14, r24
     c5c:	1b 01       	movw	r2, r22
     c5e:	6a 01       	movw	r12, r20
     c60:	fc 01       	movw	r30, r24
     c62:	17 82       	std	Z+7, r1	; 0x07
     c64:	16 82       	std	Z+6, r1	; 0x06
     c66:	83 81       	ldd	r24, Z+3	; 0x03
     c68:	81 ff       	sbrs	r24, 1
     c6a:	44 c3       	rjmp	.+1672   	; 0x12f4 <vfprintf+0x6a6>
     c6c:	9e 01       	movw	r18, r28
     c6e:	2f 5f       	subi	r18, 0xFF	; 255
     c70:	3f 4f       	sbci	r19, 0xFF	; 255
     c72:	39 01       	movw	r6, r18
     c74:	f7 01       	movw	r30, r14
     c76:	93 81       	ldd	r25, Z+3	; 0x03
     c78:	f1 01       	movw	r30, r2
     c7a:	93 fd       	sbrc	r25, 3
     c7c:	85 91       	lpm	r24, Z+
     c7e:	93 ff       	sbrs	r25, 3
     c80:	81 91       	ld	r24, Z+
     c82:	1f 01       	movw	r2, r30
     c84:	88 23       	and	r24, r24
     c86:	09 f4       	brne	.+2      	; 0xc8a <vfprintf+0x3c>
     c88:	31 c3       	rjmp	.+1634   	; 0x12ec <vfprintf+0x69e>
     c8a:	85 32       	cpi	r24, 0x25	; 37
     c8c:	39 f4       	brne	.+14     	; 0xc9c <vfprintf+0x4e>
     c8e:	93 fd       	sbrc	r25, 3
     c90:	85 91       	lpm	r24, Z+
     c92:	93 ff       	sbrs	r25, 3
     c94:	81 91       	ld	r24, Z+
     c96:	1f 01       	movw	r2, r30
     c98:	85 32       	cpi	r24, 0x25	; 37
     c9a:	39 f4       	brne	.+14     	; 0xcaa <vfprintf+0x5c>
     c9c:	b7 01       	movw	r22, r14
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     ca4:	56 01       	movw	r10, r12
     ca6:	65 01       	movw	r12, r10
     ca8:	e5 cf       	rjmp	.-54     	; 0xc74 <vfprintf+0x26>
     caa:	10 e0       	ldi	r17, 0x00	; 0
     cac:	51 2c       	mov	r5, r1
     cae:	91 2c       	mov	r9, r1
     cb0:	ff e1       	ldi	r31, 0x1F	; 31
     cb2:	f9 15       	cp	r31, r9
     cb4:	d8 f0       	brcs	.+54     	; 0xcec <vfprintf+0x9e>
     cb6:	8b 32       	cpi	r24, 0x2B	; 43
     cb8:	79 f0       	breq	.+30     	; 0xcd8 <vfprintf+0x8a>
     cba:	38 f4       	brcc	.+14     	; 0xcca <vfprintf+0x7c>
     cbc:	80 32       	cpi	r24, 0x20	; 32
     cbe:	79 f0       	breq	.+30     	; 0xcde <vfprintf+0x90>
     cc0:	83 32       	cpi	r24, 0x23	; 35
     cc2:	a1 f4       	brne	.+40     	; 0xcec <vfprintf+0x9e>
     cc4:	f9 2d       	mov	r31, r9
     cc6:	f0 61       	ori	r31, 0x10	; 16
     cc8:	2e c0       	rjmp	.+92     	; 0xd26 <vfprintf+0xd8>
     cca:	8d 32       	cpi	r24, 0x2D	; 45
     ccc:	61 f0       	breq	.+24     	; 0xce6 <vfprintf+0x98>
     cce:	80 33       	cpi	r24, 0x30	; 48
     cd0:	69 f4       	brne	.+26     	; 0xcec <vfprintf+0x9e>
     cd2:	29 2d       	mov	r18, r9
     cd4:	21 60       	ori	r18, 0x01	; 1
     cd6:	2d c0       	rjmp	.+90     	; 0xd32 <vfprintf+0xe4>
     cd8:	39 2d       	mov	r19, r9
     cda:	32 60       	ori	r19, 0x02	; 2
     cdc:	93 2e       	mov	r9, r19
     cde:	89 2d       	mov	r24, r9
     ce0:	84 60       	ori	r24, 0x04	; 4
     ce2:	98 2e       	mov	r9, r24
     ce4:	2a c0       	rjmp	.+84     	; 0xd3a <vfprintf+0xec>
     ce6:	e9 2d       	mov	r30, r9
     ce8:	e8 60       	ori	r30, 0x08	; 8
     cea:	15 c0       	rjmp	.+42     	; 0xd16 <vfprintf+0xc8>
     cec:	97 fc       	sbrc	r9, 7
     cee:	2d c0       	rjmp	.+90     	; 0xd4a <vfprintf+0xfc>
     cf0:	20 ed       	ldi	r18, 0xD0	; 208
     cf2:	28 0f       	add	r18, r24
     cf4:	2a 30       	cpi	r18, 0x0A	; 10
     cf6:	88 f4       	brcc	.+34     	; 0xd1a <vfprintf+0xcc>
     cf8:	96 fe       	sbrs	r9, 6
     cfa:	06 c0       	rjmp	.+12     	; 0xd08 <vfprintf+0xba>
     cfc:	3a e0       	ldi	r19, 0x0A	; 10
     cfe:	13 9f       	mul	r17, r19
     d00:	20 0d       	add	r18, r0
     d02:	11 24       	eor	r1, r1
     d04:	12 2f       	mov	r17, r18
     d06:	19 c0       	rjmp	.+50     	; 0xd3a <vfprintf+0xec>
     d08:	8a e0       	ldi	r24, 0x0A	; 10
     d0a:	58 9e       	mul	r5, r24
     d0c:	20 0d       	add	r18, r0
     d0e:	11 24       	eor	r1, r1
     d10:	52 2e       	mov	r5, r18
     d12:	e9 2d       	mov	r30, r9
     d14:	e0 62       	ori	r30, 0x20	; 32
     d16:	9e 2e       	mov	r9, r30
     d18:	10 c0       	rjmp	.+32     	; 0xd3a <vfprintf+0xec>
     d1a:	8e 32       	cpi	r24, 0x2E	; 46
     d1c:	31 f4       	brne	.+12     	; 0xd2a <vfprintf+0xdc>
     d1e:	96 fc       	sbrc	r9, 6
     d20:	e5 c2       	rjmp	.+1482   	; 0x12ec <vfprintf+0x69e>
     d22:	f9 2d       	mov	r31, r9
     d24:	f0 64       	ori	r31, 0x40	; 64
     d26:	9f 2e       	mov	r9, r31
     d28:	08 c0       	rjmp	.+16     	; 0xd3a <vfprintf+0xec>
     d2a:	8c 36       	cpi	r24, 0x6C	; 108
     d2c:	21 f4       	brne	.+8      	; 0xd36 <vfprintf+0xe8>
     d2e:	29 2d       	mov	r18, r9
     d30:	20 68       	ori	r18, 0x80	; 128
     d32:	92 2e       	mov	r9, r18
     d34:	02 c0       	rjmp	.+4      	; 0xd3a <vfprintf+0xec>
     d36:	88 36       	cpi	r24, 0x68	; 104
     d38:	41 f4       	brne	.+16     	; 0xd4a <vfprintf+0xfc>
     d3a:	f1 01       	movw	r30, r2
     d3c:	93 fd       	sbrc	r25, 3
     d3e:	85 91       	lpm	r24, Z+
     d40:	93 ff       	sbrs	r25, 3
     d42:	81 91       	ld	r24, Z+
     d44:	1f 01       	movw	r2, r30
     d46:	81 11       	cpse	r24, r1
     d48:	b3 cf       	rjmp	.-154    	; 0xcb0 <vfprintf+0x62>
     d4a:	9b eb       	ldi	r25, 0xBB	; 187
     d4c:	98 0f       	add	r25, r24
     d4e:	93 30       	cpi	r25, 0x03	; 3
     d50:	20 f4       	brcc	.+8      	; 0xd5a <vfprintf+0x10c>
     d52:	99 2d       	mov	r25, r9
     d54:	90 61       	ori	r25, 0x10	; 16
     d56:	80 5e       	subi	r24, 0xE0	; 224
     d58:	07 c0       	rjmp	.+14     	; 0xd68 <vfprintf+0x11a>
     d5a:	9b e9       	ldi	r25, 0x9B	; 155
     d5c:	98 0f       	add	r25, r24
     d5e:	93 30       	cpi	r25, 0x03	; 3
     d60:	08 f0       	brcs	.+2      	; 0xd64 <vfprintf+0x116>
     d62:	66 c1       	rjmp	.+716    	; 0x1030 <vfprintf+0x3e2>
     d64:	99 2d       	mov	r25, r9
     d66:	9f 7e       	andi	r25, 0xEF	; 239
     d68:	96 ff       	sbrs	r25, 6
     d6a:	16 e0       	ldi	r17, 0x06	; 6
     d6c:	9f 73       	andi	r25, 0x3F	; 63
     d6e:	99 2e       	mov	r9, r25
     d70:	85 36       	cpi	r24, 0x65	; 101
     d72:	19 f4       	brne	.+6      	; 0xd7a <vfprintf+0x12c>
     d74:	90 64       	ori	r25, 0x40	; 64
     d76:	99 2e       	mov	r9, r25
     d78:	08 c0       	rjmp	.+16     	; 0xd8a <vfprintf+0x13c>
     d7a:	86 36       	cpi	r24, 0x66	; 102
     d7c:	21 f4       	brne	.+8      	; 0xd86 <vfprintf+0x138>
     d7e:	39 2f       	mov	r19, r25
     d80:	30 68       	ori	r19, 0x80	; 128
     d82:	93 2e       	mov	r9, r19
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <vfprintf+0x13c>
     d86:	11 11       	cpse	r17, r1
     d88:	11 50       	subi	r17, 0x01	; 1
     d8a:	97 fe       	sbrs	r9, 7
     d8c:	07 c0       	rjmp	.+14     	; 0xd9c <vfprintf+0x14e>
     d8e:	1c 33       	cpi	r17, 0x3C	; 60
     d90:	50 f4       	brcc	.+20     	; 0xda6 <vfprintf+0x158>
     d92:	44 24       	eor	r4, r4
     d94:	43 94       	inc	r4
     d96:	41 0e       	add	r4, r17
     d98:	27 e0       	ldi	r18, 0x07	; 7
     d9a:	0b c0       	rjmp	.+22     	; 0xdb2 <vfprintf+0x164>
     d9c:	18 30       	cpi	r17, 0x08	; 8
     d9e:	38 f0       	brcs	.+14     	; 0xdae <vfprintf+0x160>
     da0:	27 e0       	ldi	r18, 0x07	; 7
     da2:	17 e0       	ldi	r17, 0x07	; 7
     da4:	05 c0       	rjmp	.+10     	; 0xdb0 <vfprintf+0x162>
     da6:	27 e0       	ldi	r18, 0x07	; 7
     da8:	9c e3       	ldi	r25, 0x3C	; 60
     daa:	49 2e       	mov	r4, r25
     dac:	02 c0       	rjmp	.+4      	; 0xdb2 <vfprintf+0x164>
     dae:	21 2f       	mov	r18, r17
     db0:	41 2c       	mov	r4, r1
     db2:	56 01       	movw	r10, r12
     db4:	84 e0       	ldi	r24, 0x04	; 4
     db6:	a8 0e       	add	r10, r24
     db8:	b1 1c       	adc	r11, r1
     dba:	f6 01       	movw	r30, r12
     dbc:	60 81       	ld	r22, Z
     dbe:	71 81       	ldd	r23, Z+1	; 0x01
     dc0:	82 81       	ldd	r24, Z+2	; 0x02
     dc2:	93 81       	ldd	r25, Z+3	; 0x03
     dc4:	04 2d       	mov	r16, r4
     dc6:	a3 01       	movw	r20, r6
     dc8:	0e 94 db 09 	call	0x13b6	; 0x13b6 <__ftoa_engine>
     dcc:	6c 01       	movw	r12, r24
     dce:	f9 81       	ldd	r31, Y+1	; 0x01
     dd0:	fc 87       	std	Y+12, r31	; 0x0c
     dd2:	f0 ff       	sbrs	r31, 0
     dd4:	02 c0       	rjmp	.+4      	; 0xdda <vfprintf+0x18c>
     dd6:	f3 ff       	sbrs	r31, 3
     dd8:	06 c0       	rjmp	.+12     	; 0xde6 <vfprintf+0x198>
     dda:	91 fc       	sbrc	r9, 1
     ddc:	06 c0       	rjmp	.+12     	; 0xdea <vfprintf+0x19c>
     dde:	92 fe       	sbrs	r9, 2
     de0:	06 c0       	rjmp	.+12     	; 0xdee <vfprintf+0x1a0>
     de2:	00 e2       	ldi	r16, 0x20	; 32
     de4:	05 c0       	rjmp	.+10     	; 0xdf0 <vfprintf+0x1a2>
     de6:	0d e2       	ldi	r16, 0x2D	; 45
     de8:	03 c0       	rjmp	.+6      	; 0xdf0 <vfprintf+0x1a2>
     dea:	0b e2       	ldi	r16, 0x2B	; 43
     dec:	01 c0       	rjmp	.+2      	; 0xdf0 <vfprintf+0x1a2>
     dee:	00 e0       	ldi	r16, 0x00	; 0
     df0:	8c 85       	ldd	r24, Y+12	; 0x0c
     df2:	8c 70       	andi	r24, 0x0C	; 12
     df4:	19 f0       	breq	.+6      	; 0xdfc <vfprintf+0x1ae>
     df6:	01 11       	cpse	r16, r1
     df8:	5a c2       	rjmp	.+1204   	; 0x12ae <vfprintf+0x660>
     dfa:	9b c2       	rjmp	.+1334   	; 0x1332 <vfprintf+0x6e4>
     dfc:	97 fe       	sbrs	r9, 7
     dfe:	10 c0       	rjmp	.+32     	; 0xe20 <vfprintf+0x1d2>
     e00:	4c 0c       	add	r4, r12
     e02:	fc 85       	ldd	r31, Y+12	; 0x0c
     e04:	f4 ff       	sbrs	r31, 4
     e06:	04 c0       	rjmp	.+8      	; 0xe10 <vfprintf+0x1c2>
     e08:	8a 81       	ldd	r24, Y+2	; 0x02
     e0a:	81 33       	cpi	r24, 0x31	; 49
     e0c:	09 f4       	brne	.+2      	; 0xe10 <vfprintf+0x1c2>
     e0e:	4a 94       	dec	r4
     e10:	14 14       	cp	r1, r4
     e12:	74 f5       	brge	.+92     	; 0xe70 <vfprintf+0x222>
     e14:	28 e0       	ldi	r18, 0x08	; 8
     e16:	24 15       	cp	r18, r4
     e18:	78 f5       	brcc	.+94     	; 0xe78 <vfprintf+0x22a>
     e1a:	88 e0       	ldi	r24, 0x08	; 8
     e1c:	48 2e       	mov	r4, r24
     e1e:	2c c0       	rjmp	.+88     	; 0xe78 <vfprintf+0x22a>
     e20:	96 fc       	sbrc	r9, 6
     e22:	2a c0       	rjmp	.+84     	; 0xe78 <vfprintf+0x22a>
     e24:	81 2f       	mov	r24, r17
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	8c 15       	cp	r24, r12
     e2a:	9d 05       	cpc	r25, r13
     e2c:	9c f0       	brlt	.+38     	; 0xe54 <vfprintf+0x206>
     e2e:	3c ef       	ldi	r19, 0xFC	; 252
     e30:	c3 16       	cp	r12, r19
     e32:	3f ef       	ldi	r19, 0xFF	; 255
     e34:	d3 06       	cpc	r13, r19
     e36:	74 f0       	brlt	.+28     	; 0xe54 <vfprintf+0x206>
     e38:	89 2d       	mov	r24, r9
     e3a:	80 68       	ori	r24, 0x80	; 128
     e3c:	98 2e       	mov	r9, r24
     e3e:	0a c0       	rjmp	.+20     	; 0xe54 <vfprintf+0x206>
     e40:	e2 e0       	ldi	r30, 0x02	; 2
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	ec 0f       	add	r30, r28
     e46:	fd 1f       	adc	r31, r29
     e48:	e1 0f       	add	r30, r17
     e4a:	f1 1d       	adc	r31, r1
     e4c:	80 81       	ld	r24, Z
     e4e:	80 33       	cpi	r24, 0x30	; 48
     e50:	19 f4       	brne	.+6      	; 0xe58 <vfprintf+0x20a>
     e52:	11 50       	subi	r17, 0x01	; 1
     e54:	11 11       	cpse	r17, r1
     e56:	f4 cf       	rjmp	.-24     	; 0xe40 <vfprintf+0x1f2>
     e58:	97 fe       	sbrs	r9, 7
     e5a:	0e c0       	rjmp	.+28     	; 0xe78 <vfprintf+0x22a>
     e5c:	44 24       	eor	r4, r4
     e5e:	43 94       	inc	r4
     e60:	41 0e       	add	r4, r17
     e62:	81 2f       	mov	r24, r17
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	c8 16       	cp	r12, r24
     e68:	d9 06       	cpc	r13, r25
     e6a:	2c f4       	brge	.+10     	; 0xe76 <vfprintf+0x228>
     e6c:	1c 19       	sub	r17, r12
     e6e:	04 c0       	rjmp	.+8      	; 0xe78 <vfprintf+0x22a>
     e70:	44 24       	eor	r4, r4
     e72:	43 94       	inc	r4
     e74:	01 c0       	rjmp	.+2      	; 0xe78 <vfprintf+0x22a>
     e76:	10 e0       	ldi	r17, 0x00	; 0
     e78:	97 fe       	sbrs	r9, 7
     e7a:	06 c0       	rjmp	.+12     	; 0xe88 <vfprintf+0x23a>
     e7c:	1c 14       	cp	r1, r12
     e7e:	1d 04       	cpc	r1, r13
     e80:	34 f4       	brge	.+12     	; 0xe8e <vfprintf+0x240>
     e82:	c6 01       	movw	r24, r12
     e84:	01 96       	adiw	r24, 0x01	; 1
     e86:	05 c0       	rjmp	.+10     	; 0xe92 <vfprintf+0x244>
     e88:	85 e0       	ldi	r24, 0x05	; 5
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <vfprintf+0x244>
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	01 11       	cpse	r16, r1
     e94:	01 96       	adiw	r24, 0x01	; 1
     e96:	11 23       	and	r17, r17
     e98:	31 f0       	breq	.+12     	; 0xea6 <vfprintf+0x258>
     e9a:	21 2f       	mov	r18, r17
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	2f 5f       	subi	r18, 0xFF	; 255
     ea0:	3f 4f       	sbci	r19, 0xFF	; 255
     ea2:	82 0f       	add	r24, r18
     ea4:	93 1f       	adc	r25, r19
     ea6:	25 2d       	mov	r18, r5
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	82 17       	cp	r24, r18
     eac:	93 07       	cpc	r25, r19
     eae:	14 f4       	brge	.+4      	; 0xeb4 <vfprintf+0x266>
     eb0:	58 1a       	sub	r5, r24
     eb2:	01 c0       	rjmp	.+2      	; 0xeb6 <vfprintf+0x268>
     eb4:	51 2c       	mov	r5, r1
     eb6:	89 2d       	mov	r24, r9
     eb8:	89 70       	andi	r24, 0x09	; 9
     eba:	49 f4       	brne	.+18     	; 0xece <vfprintf+0x280>
     ebc:	55 20       	and	r5, r5
     ebe:	39 f0       	breq	.+14     	; 0xece <vfprintf+0x280>
     ec0:	b7 01       	movw	r22, r14
     ec2:	80 e2       	ldi	r24, 0x20	; 32
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     eca:	5a 94       	dec	r5
     ecc:	f7 cf       	rjmp	.-18     	; 0xebc <vfprintf+0x26e>
     ece:	00 23       	and	r16, r16
     ed0:	29 f0       	breq	.+10     	; 0xedc <vfprintf+0x28e>
     ed2:	b7 01       	movw	r22, r14
     ed4:	80 2f       	mov	r24, r16
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     edc:	93 fc       	sbrc	r9, 3
     ede:	09 c0       	rjmp	.+18     	; 0xef2 <vfprintf+0x2a4>
     ee0:	55 20       	and	r5, r5
     ee2:	39 f0       	breq	.+14     	; 0xef2 <vfprintf+0x2a4>
     ee4:	b7 01       	movw	r22, r14
     ee6:	80 e3       	ldi	r24, 0x30	; 48
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     eee:	5a 94       	dec	r5
     ef0:	f7 cf       	rjmp	.-18     	; 0xee0 <vfprintf+0x292>
     ef2:	97 fe       	sbrs	r9, 7
     ef4:	4c c0       	rjmp	.+152    	; 0xf8e <vfprintf+0x340>
     ef6:	46 01       	movw	r8, r12
     ef8:	d7 fe       	sbrs	r13, 7
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <vfprintf+0x2b2>
     efc:	81 2c       	mov	r8, r1
     efe:	91 2c       	mov	r9, r1
     f00:	c6 01       	movw	r24, r12
     f02:	88 19       	sub	r24, r8
     f04:	99 09       	sbc	r25, r9
     f06:	f3 01       	movw	r30, r6
     f08:	e8 0f       	add	r30, r24
     f0a:	f9 1f       	adc	r31, r25
     f0c:	fe 87       	std	Y+14, r31	; 0x0e
     f0e:	ed 87       	std	Y+13, r30	; 0x0d
     f10:	96 01       	movw	r18, r12
     f12:	24 19       	sub	r18, r4
     f14:	31 09       	sbc	r19, r1
     f16:	38 8b       	std	Y+16, r19	; 0x10
     f18:	2f 87       	std	Y+15, r18	; 0x0f
     f1a:	01 2f       	mov	r16, r17
     f1c:	10 e0       	ldi	r17, 0x00	; 0
     f1e:	11 95       	neg	r17
     f20:	01 95       	neg	r16
     f22:	11 09       	sbc	r17, r1
     f24:	3f ef       	ldi	r19, 0xFF	; 255
     f26:	83 16       	cp	r8, r19
     f28:	93 06       	cpc	r9, r19
     f2a:	29 f4       	brne	.+10     	; 0xf36 <vfprintf+0x2e8>
     f2c:	b7 01       	movw	r22, r14
     f2e:	8e e2       	ldi	r24, 0x2E	; 46
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     f36:	c8 14       	cp	r12, r8
     f38:	d9 04       	cpc	r13, r9
     f3a:	4c f0       	brlt	.+18     	; 0xf4e <vfprintf+0x300>
     f3c:	8f 85       	ldd	r24, Y+15	; 0x0f
     f3e:	98 89       	ldd	r25, Y+16	; 0x10
     f40:	88 15       	cp	r24, r8
     f42:	99 05       	cpc	r25, r9
     f44:	24 f4       	brge	.+8      	; 0xf4e <vfprintf+0x300>
     f46:	ed 85       	ldd	r30, Y+13	; 0x0d
     f48:	fe 85       	ldd	r31, Y+14	; 0x0e
     f4a:	81 81       	ldd	r24, Z+1	; 0x01
     f4c:	01 c0       	rjmp	.+2      	; 0xf50 <vfprintf+0x302>
     f4e:	80 e3       	ldi	r24, 0x30	; 48
     f50:	f1 e0       	ldi	r31, 0x01	; 1
     f52:	8f 1a       	sub	r8, r31
     f54:	91 08       	sbc	r9, r1
     f56:	2d 85       	ldd	r18, Y+13	; 0x0d
     f58:	3e 85       	ldd	r19, Y+14	; 0x0e
     f5a:	2f 5f       	subi	r18, 0xFF	; 255
     f5c:	3f 4f       	sbci	r19, 0xFF	; 255
     f5e:	3e 87       	std	Y+14, r19	; 0x0e
     f60:	2d 87       	std	Y+13, r18	; 0x0d
     f62:	80 16       	cp	r8, r16
     f64:	91 06       	cpc	r9, r17
     f66:	2c f0       	brlt	.+10     	; 0xf72 <vfprintf+0x324>
     f68:	b7 01       	movw	r22, r14
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     f70:	d9 cf       	rjmp	.-78     	; 0xf24 <vfprintf+0x2d6>
     f72:	c8 14       	cp	r12, r8
     f74:	d9 04       	cpc	r13, r9
     f76:	41 f4       	brne	.+16     	; 0xf88 <vfprintf+0x33a>
     f78:	9a 81       	ldd	r25, Y+2	; 0x02
     f7a:	96 33       	cpi	r25, 0x36	; 54
     f7c:	20 f4       	brcc	.+8      	; 0xf86 <vfprintf+0x338>
     f7e:	95 33       	cpi	r25, 0x35	; 53
     f80:	19 f4       	brne	.+6      	; 0xf88 <vfprintf+0x33a>
     f82:	3c 85       	ldd	r19, Y+12	; 0x0c
     f84:	34 ff       	sbrs	r19, 4
     f86:	81 e3       	ldi	r24, 0x31	; 49
     f88:	b7 01       	movw	r22, r14
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	4e c0       	rjmp	.+156    	; 0x102a <vfprintf+0x3dc>
     f8e:	8a 81       	ldd	r24, Y+2	; 0x02
     f90:	81 33       	cpi	r24, 0x31	; 49
     f92:	19 f0       	breq	.+6      	; 0xf9a <vfprintf+0x34c>
     f94:	9c 85       	ldd	r25, Y+12	; 0x0c
     f96:	9f 7e       	andi	r25, 0xEF	; 239
     f98:	9c 87       	std	Y+12, r25	; 0x0c
     f9a:	b7 01       	movw	r22, r14
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     fa2:	11 11       	cpse	r17, r1
     fa4:	05 c0       	rjmp	.+10     	; 0xfb0 <vfprintf+0x362>
     fa6:	94 fc       	sbrc	r9, 4
     fa8:	18 c0       	rjmp	.+48     	; 0xfda <vfprintf+0x38c>
     faa:	85 e6       	ldi	r24, 0x65	; 101
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	17 c0       	rjmp	.+46     	; 0xfde <vfprintf+0x390>
     fb0:	b7 01       	movw	r22, r14
     fb2:	8e e2       	ldi	r24, 0x2E	; 46
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     fba:	1e 5f       	subi	r17, 0xFE	; 254
     fbc:	82 e0       	ldi	r24, 0x02	; 2
     fbe:	01 e0       	ldi	r16, 0x01	; 1
     fc0:	08 0f       	add	r16, r24
     fc2:	f3 01       	movw	r30, r6
     fc4:	e8 0f       	add	r30, r24
     fc6:	f1 1d       	adc	r31, r1
     fc8:	80 81       	ld	r24, Z
     fca:	b7 01       	movw	r22, r14
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     fd2:	80 2f       	mov	r24, r16
     fd4:	01 13       	cpse	r16, r17
     fd6:	f3 cf       	rjmp	.-26     	; 0xfbe <vfprintf+0x370>
     fd8:	e6 cf       	rjmp	.-52     	; 0xfa6 <vfprintf+0x358>
     fda:	85 e4       	ldi	r24, 0x45	; 69
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	b7 01       	movw	r22, r14
     fe0:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
     fe4:	d7 fc       	sbrc	r13, 7
     fe6:	06 c0       	rjmp	.+12     	; 0xff4 <vfprintf+0x3a6>
     fe8:	c1 14       	cp	r12, r1
     fea:	d1 04       	cpc	r13, r1
     fec:	41 f4       	brne	.+16     	; 0xffe <vfprintf+0x3b0>
     fee:	ec 85       	ldd	r30, Y+12	; 0x0c
     ff0:	e4 ff       	sbrs	r30, 4
     ff2:	05 c0       	rjmp	.+10     	; 0xffe <vfprintf+0x3b0>
     ff4:	d1 94       	neg	r13
     ff6:	c1 94       	neg	r12
     ff8:	d1 08       	sbc	r13, r1
     ffa:	8d e2       	ldi	r24, 0x2D	; 45
     ffc:	01 c0       	rjmp	.+2      	; 0x1000 <vfprintf+0x3b2>
     ffe:	8b e2       	ldi	r24, 0x2B	; 43
    1000:	b7 01       	movw	r22, r14
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    1008:	80 e3       	ldi	r24, 0x30	; 48
    100a:	2a e0       	ldi	r18, 0x0A	; 10
    100c:	c2 16       	cp	r12, r18
    100e:	d1 04       	cpc	r13, r1
    1010:	2c f0       	brlt	.+10     	; 0x101c <vfprintf+0x3ce>
    1012:	8f 5f       	subi	r24, 0xFF	; 255
    1014:	fa e0       	ldi	r31, 0x0A	; 10
    1016:	cf 1a       	sub	r12, r31
    1018:	d1 08       	sbc	r13, r1
    101a:	f7 cf       	rjmp	.-18     	; 0x100a <vfprintf+0x3bc>
    101c:	b7 01       	movw	r22, r14
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    1024:	b7 01       	movw	r22, r14
    1026:	c6 01       	movw	r24, r12
    1028:	c0 96       	adiw	r24, 0x30	; 48
    102a:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    102e:	54 c1       	rjmp	.+680    	; 0x12d8 <vfprintf+0x68a>
    1030:	83 36       	cpi	r24, 0x63	; 99
    1032:	31 f0       	breq	.+12     	; 0x1040 <vfprintf+0x3f2>
    1034:	83 37       	cpi	r24, 0x73	; 115
    1036:	79 f0       	breq	.+30     	; 0x1056 <vfprintf+0x408>
    1038:	83 35       	cpi	r24, 0x53	; 83
    103a:	09 f0       	breq	.+2      	; 0x103e <vfprintf+0x3f0>
    103c:	56 c0       	rjmp	.+172    	; 0x10ea <vfprintf+0x49c>
    103e:	20 c0       	rjmp	.+64     	; 0x1080 <vfprintf+0x432>
    1040:	56 01       	movw	r10, r12
    1042:	32 e0       	ldi	r19, 0x02	; 2
    1044:	a3 0e       	add	r10, r19
    1046:	b1 1c       	adc	r11, r1
    1048:	f6 01       	movw	r30, r12
    104a:	80 81       	ld	r24, Z
    104c:	89 83       	std	Y+1, r24	; 0x01
    104e:	01 e0       	ldi	r16, 0x01	; 1
    1050:	10 e0       	ldi	r17, 0x00	; 0
    1052:	63 01       	movw	r12, r6
    1054:	12 c0       	rjmp	.+36     	; 0x107a <vfprintf+0x42c>
    1056:	56 01       	movw	r10, r12
    1058:	f2 e0       	ldi	r31, 0x02	; 2
    105a:	af 0e       	add	r10, r31
    105c:	b1 1c       	adc	r11, r1
    105e:	f6 01       	movw	r30, r12
    1060:	c0 80       	ld	r12, Z
    1062:	d1 80       	ldd	r13, Z+1	; 0x01
    1064:	96 fe       	sbrs	r9, 6
    1066:	03 c0       	rjmp	.+6      	; 0x106e <vfprintf+0x420>
    1068:	61 2f       	mov	r22, r17
    106a:	70 e0       	ldi	r23, 0x00	; 0
    106c:	02 c0       	rjmp	.+4      	; 0x1072 <vfprintf+0x424>
    106e:	6f ef       	ldi	r22, 0xFF	; 255
    1070:	7f ef       	ldi	r23, 0xFF	; 255
    1072:	c6 01       	movw	r24, r12
    1074:	0e 94 be 0a 	call	0x157c	; 0x157c <strnlen>
    1078:	8c 01       	movw	r16, r24
    107a:	f9 2d       	mov	r31, r9
    107c:	ff 77       	andi	r31, 0x7F	; 127
    107e:	14 c0       	rjmp	.+40     	; 0x10a8 <vfprintf+0x45a>
    1080:	56 01       	movw	r10, r12
    1082:	22 e0       	ldi	r18, 0x02	; 2
    1084:	a2 0e       	add	r10, r18
    1086:	b1 1c       	adc	r11, r1
    1088:	f6 01       	movw	r30, r12
    108a:	c0 80       	ld	r12, Z
    108c:	d1 80       	ldd	r13, Z+1	; 0x01
    108e:	96 fe       	sbrs	r9, 6
    1090:	03 c0       	rjmp	.+6      	; 0x1098 <vfprintf+0x44a>
    1092:	61 2f       	mov	r22, r17
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	02 c0       	rjmp	.+4      	; 0x109c <vfprintf+0x44e>
    1098:	6f ef       	ldi	r22, 0xFF	; 255
    109a:	7f ef       	ldi	r23, 0xFF	; 255
    109c:	c6 01       	movw	r24, r12
    109e:	0e 94 b3 0a 	call	0x1566	; 0x1566 <strnlen_P>
    10a2:	8c 01       	movw	r16, r24
    10a4:	f9 2d       	mov	r31, r9
    10a6:	f0 68       	ori	r31, 0x80	; 128
    10a8:	9f 2e       	mov	r9, r31
    10aa:	f3 fd       	sbrc	r31, 3
    10ac:	1a c0       	rjmp	.+52     	; 0x10e2 <vfprintf+0x494>
    10ae:	85 2d       	mov	r24, r5
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	08 17       	cp	r16, r24
    10b4:	19 07       	cpc	r17, r25
    10b6:	a8 f4       	brcc	.+42     	; 0x10e2 <vfprintf+0x494>
    10b8:	b7 01       	movw	r22, r14
    10ba:	80 e2       	ldi	r24, 0x20	; 32
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    10c2:	5a 94       	dec	r5
    10c4:	f4 cf       	rjmp	.-24     	; 0x10ae <vfprintf+0x460>
    10c6:	f6 01       	movw	r30, r12
    10c8:	97 fc       	sbrc	r9, 7
    10ca:	85 91       	lpm	r24, Z+
    10cc:	97 fe       	sbrs	r9, 7
    10ce:	81 91       	ld	r24, Z+
    10d0:	6f 01       	movw	r12, r30
    10d2:	b7 01       	movw	r22, r14
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    10da:	51 10       	cpse	r5, r1
    10dc:	5a 94       	dec	r5
    10de:	01 50       	subi	r16, 0x01	; 1
    10e0:	11 09       	sbc	r17, r1
    10e2:	01 15       	cp	r16, r1
    10e4:	11 05       	cpc	r17, r1
    10e6:	79 f7       	brne	.-34     	; 0x10c6 <vfprintf+0x478>
    10e8:	f7 c0       	rjmp	.+494    	; 0x12d8 <vfprintf+0x68a>
    10ea:	84 36       	cpi	r24, 0x64	; 100
    10ec:	11 f0       	breq	.+4      	; 0x10f2 <vfprintf+0x4a4>
    10ee:	89 36       	cpi	r24, 0x69	; 105
    10f0:	61 f5       	brne	.+88     	; 0x114a <vfprintf+0x4fc>
    10f2:	56 01       	movw	r10, r12
    10f4:	97 fe       	sbrs	r9, 7
    10f6:	09 c0       	rjmp	.+18     	; 0x110a <vfprintf+0x4bc>
    10f8:	24 e0       	ldi	r18, 0x04	; 4
    10fa:	a2 0e       	add	r10, r18
    10fc:	b1 1c       	adc	r11, r1
    10fe:	f6 01       	movw	r30, r12
    1100:	60 81       	ld	r22, Z
    1102:	71 81       	ldd	r23, Z+1	; 0x01
    1104:	82 81       	ldd	r24, Z+2	; 0x02
    1106:	93 81       	ldd	r25, Z+3	; 0x03
    1108:	0a c0       	rjmp	.+20     	; 0x111e <vfprintf+0x4d0>
    110a:	f2 e0       	ldi	r31, 0x02	; 2
    110c:	af 0e       	add	r10, r31
    110e:	b1 1c       	adc	r11, r1
    1110:	f6 01       	movw	r30, r12
    1112:	60 81       	ld	r22, Z
    1114:	71 81       	ldd	r23, Z+1	; 0x01
    1116:	07 2e       	mov	r0, r23
    1118:	00 0c       	add	r0, r0
    111a:	88 0b       	sbc	r24, r24
    111c:	99 0b       	sbc	r25, r25
    111e:	f9 2d       	mov	r31, r9
    1120:	ff 76       	andi	r31, 0x6F	; 111
    1122:	9f 2e       	mov	r9, r31
    1124:	97 ff       	sbrs	r25, 7
    1126:	09 c0       	rjmp	.+18     	; 0x113a <vfprintf+0x4ec>
    1128:	90 95       	com	r25
    112a:	80 95       	com	r24
    112c:	70 95       	com	r23
    112e:	61 95       	neg	r22
    1130:	7f 4f       	sbci	r23, 0xFF	; 255
    1132:	8f 4f       	sbci	r24, 0xFF	; 255
    1134:	9f 4f       	sbci	r25, 0xFF	; 255
    1136:	f0 68       	ori	r31, 0x80	; 128
    1138:	9f 2e       	mov	r9, r31
    113a:	2a e0       	ldi	r18, 0x0A	; 10
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	a3 01       	movw	r20, r6
    1140:	0e 94 21 0b 	call	0x1642	; 0x1642 <__ultoa_invert>
    1144:	c8 2e       	mov	r12, r24
    1146:	c6 18       	sub	r12, r6
    1148:	3f c0       	rjmp	.+126    	; 0x11c8 <vfprintf+0x57a>
    114a:	09 2d       	mov	r16, r9
    114c:	85 37       	cpi	r24, 0x75	; 117
    114e:	21 f4       	brne	.+8      	; 0x1158 <vfprintf+0x50a>
    1150:	0f 7e       	andi	r16, 0xEF	; 239
    1152:	2a e0       	ldi	r18, 0x0A	; 10
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	1d c0       	rjmp	.+58     	; 0x1192 <vfprintf+0x544>
    1158:	09 7f       	andi	r16, 0xF9	; 249
    115a:	8f 36       	cpi	r24, 0x6F	; 111
    115c:	91 f0       	breq	.+36     	; 0x1182 <vfprintf+0x534>
    115e:	18 f4       	brcc	.+6      	; 0x1166 <vfprintf+0x518>
    1160:	88 35       	cpi	r24, 0x58	; 88
    1162:	59 f0       	breq	.+22     	; 0x117a <vfprintf+0x52c>
    1164:	c3 c0       	rjmp	.+390    	; 0x12ec <vfprintf+0x69e>
    1166:	80 37       	cpi	r24, 0x70	; 112
    1168:	19 f0       	breq	.+6      	; 0x1170 <vfprintf+0x522>
    116a:	88 37       	cpi	r24, 0x78	; 120
    116c:	11 f0       	breq	.+4      	; 0x1172 <vfprintf+0x524>
    116e:	be c0       	rjmp	.+380    	; 0x12ec <vfprintf+0x69e>
    1170:	00 61       	ori	r16, 0x10	; 16
    1172:	04 ff       	sbrs	r16, 4
    1174:	09 c0       	rjmp	.+18     	; 0x1188 <vfprintf+0x53a>
    1176:	04 60       	ori	r16, 0x04	; 4
    1178:	07 c0       	rjmp	.+14     	; 0x1188 <vfprintf+0x53a>
    117a:	94 fe       	sbrs	r9, 4
    117c:	08 c0       	rjmp	.+16     	; 0x118e <vfprintf+0x540>
    117e:	06 60       	ori	r16, 0x06	; 6
    1180:	06 c0       	rjmp	.+12     	; 0x118e <vfprintf+0x540>
    1182:	28 e0       	ldi	r18, 0x08	; 8
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	05 c0       	rjmp	.+10     	; 0x1192 <vfprintf+0x544>
    1188:	20 e1       	ldi	r18, 0x10	; 16
    118a:	30 e0       	ldi	r19, 0x00	; 0
    118c:	02 c0       	rjmp	.+4      	; 0x1192 <vfprintf+0x544>
    118e:	20 e1       	ldi	r18, 0x10	; 16
    1190:	32 e0       	ldi	r19, 0x02	; 2
    1192:	56 01       	movw	r10, r12
    1194:	07 ff       	sbrs	r16, 7
    1196:	09 c0       	rjmp	.+18     	; 0x11aa <vfprintf+0x55c>
    1198:	84 e0       	ldi	r24, 0x04	; 4
    119a:	a8 0e       	add	r10, r24
    119c:	b1 1c       	adc	r11, r1
    119e:	f6 01       	movw	r30, r12
    11a0:	60 81       	ld	r22, Z
    11a2:	71 81       	ldd	r23, Z+1	; 0x01
    11a4:	82 81       	ldd	r24, Z+2	; 0x02
    11a6:	93 81       	ldd	r25, Z+3	; 0x03
    11a8:	08 c0       	rjmp	.+16     	; 0x11ba <vfprintf+0x56c>
    11aa:	f2 e0       	ldi	r31, 0x02	; 2
    11ac:	af 0e       	add	r10, r31
    11ae:	b1 1c       	adc	r11, r1
    11b0:	f6 01       	movw	r30, r12
    11b2:	60 81       	ld	r22, Z
    11b4:	71 81       	ldd	r23, Z+1	; 0x01
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	a3 01       	movw	r20, r6
    11bc:	0e 94 21 0b 	call	0x1642	; 0x1642 <__ultoa_invert>
    11c0:	c8 2e       	mov	r12, r24
    11c2:	c6 18       	sub	r12, r6
    11c4:	0f 77       	andi	r16, 0x7F	; 127
    11c6:	90 2e       	mov	r9, r16
    11c8:	96 fe       	sbrs	r9, 6
    11ca:	0b c0       	rjmp	.+22     	; 0x11e2 <vfprintf+0x594>
    11cc:	09 2d       	mov	r16, r9
    11ce:	0e 7f       	andi	r16, 0xFE	; 254
    11d0:	c1 16       	cp	r12, r17
    11d2:	50 f4       	brcc	.+20     	; 0x11e8 <vfprintf+0x59a>
    11d4:	94 fe       	sbrs	r9, 4
    11d6:	0a c0       	rjmp	.+20     	; 0x11ec <vfprintf+0x59e>
    11d8:	92 fc       	sbrc	r9, 2
    11da:	08 c0       	rjmp	.+16     	; 0x11ec <vfprintf+0x59e>
    11dc:	09 2d       	mov	r16, r9
    11de:	0e 7e       	andi	r16, 0xEE	; 238
    11e0:	05 c0       	rjmp	.+10     	; 0x11ec <vfprintf+0x59e>
    11e2:	dc 2c       	mov	r13, r12
    11e4:	09 2d       	mov	r16, r9
    11e6:	03 c0       	rjmp	.+6      	; 0x11ee <vfprintf+0x5a0>
    11e8:	dc 2c       	mov	r13, r12
    11ea:	01 c0       	rjmp	.+2      	; 0x11ee <vfprintf+0x5a0>
    11ec:	d1 2e       	mov	r13, r17
    11ee:	04 ff       	sbrs	r16, 4
    11f0:	0d c0       	rjmp	.+26     	; 0x120c <vfprintf+0x5be>
    11f2:	fe 01       	movw	r30, r28
    11f4:	ec 0d       	add	r30, r12
    11f6:	f1 1d       	adc	r31, r1
    11f8:	80 81       	ld	r24, Z
    11fa:	80 33       	cpi	r24, 0x30	; 48
    11fc:	11 f4       	brne	.+4      	; 0x1202 <vfprintf+0x5b4>
    11fe:	09 7e       	andi	r16, 0xE9	; 233
    1200:	09 c0       	rjmp	.+18     	; 0x1214 <vfprintf+0x5c6>
    1202:	02 ff       	sbrs	r16, 2
    1204:	06 c0       	rjmp	.+12     	; 0x1212 <vfprintf+0x5c4>
    1206:	d3 94       	inc	r13
    1208:	d3 94       	inc	r13
    120a:	04 c0       	rjmp	.+8      	; 0x1214 <vfprintf+0x5c6>
    120c:	80 2f       	mov	r24, r16
    120e:	86 78       	andi	r24, 0x86	; 134
    1210:	09 f0       	breq	.+2      	; 0x1214 <vfprintf+0x5c6>
    1212:	d3 94       	inc	r13
    1214:	03 fd       	sbrc	r16, 3
    1216:	11 c0       	rjmp	.+34     	; 0x123a <vfprintf+0x5ec>
    1218:	00 ff       	sbrs	r16, 0
    121a:	06 c0       	rjmp	.+12     	; 0x1228 <vfprintf+0x5da>
    121c:	1c 2d       	mov	r17, r12
    121e:	d5 14       	cp	r13, r5
    1220:	80 f4       	brcc	.+32     	; 0x1242 <vfprintf+0x5f4>
    1222:	15 0d       	add	r17, r5
    1224:	1d 19       	sub	r17, r13
    1226:	0d c0       	rjmp	.+26     	; 0x1242 <vfprintf+0x5f4>
    1228:	d5 14       	cp	r13, r5
    122a:	58 f4       	brcc	.+22     	; 0x1242 <vfprintf+0x5f4>
    122c:	b7 01       	movw	r22, r14
    122e:	80 e2       	ldi	r24, 0x20	; 32
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    1236:	d3 94       	inc	r13
    1238:	f7 cf       	rjmp	.-18     	; 0x1228 <vfprintf+0x5da>
    123a:	d5 14       	cp	r13, r5
    123c:	10 f4       	brcc	.+4      	; 0x1242 <vfprintf+0x5f4>
    123e:	5d 18       	sub	r5, r13
    1240:	01 c0       	rjmp	.+2      	; 0x1244 <vfprintf+0x5f6>
    1242:	51 2c       	mov	r5, r1
    1244:	04 ff       	sbrs	r16, 4
    1246:	10 c0       	rjmp	.+32     	; 0x1268 <vfprintf+0x61a>
    1248:	b7 01       	movw	r22, r14
    124a:	80 e3       	ldi	r24, 0x30	; 48
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    1252:	02 ff       	sbrs	r16, 2
    1254:	17 c0       	rjmp	.+46     	; 0x1284 <vfprintf+0x636>
    1256:	01 fd       	sbrc	r16, 1
    1258:	03 c0       	rjmp	.+6      	; 0x1260 <vfprintf+0x612>
    125a:	88 e7       	ldi	r24, 0x78	; 120
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	02 c0       	rjmp	.+4      	; 0x1264 <vfprintf+0x616>
    1260:	88 e5       	ldi	r24, 0x58	; 88
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	b7 01       	movw	r22, r14
    1266:	0c c0       	rjmp	.+24     	; 0x1280 <vfprintf+0x632>
    1268:	80 2f       	mov	r24, r16
    126a:	86 78       	andi	r24, 0x86	; 134
    126c:	59 f0       	breq	.+22     	; 0x1284 <vfprintf+0x636>
    126e:	01 ff       	sbrs	r16, 1
    1270:	02 c0       	rjmp	.+4      	; 0x1276 <vfprintf+0x628>
    1272:	8b e2       	ldi	r24, 0x2B	; 43
    1274:	01 c0       	rjmp	.+2      	; 0x1278 <vfprintf+0x62a>
    1276:	80 e2       	ldi	r24, 0x20	; 32
    1278:	07 fd       	sbrc	r16, 7
    127a:	8d e2       	ldi	r24, 0x2D	; 45
    127c:	b7 01       	movw	r22, r14
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    1284:	c1 16       	cp	r12, r17
    1286:	38 f4       	brcc	.+14     	; 0x1296 <vfprintf+0x648>
    1288:	b7 01       	movw	r22, r14
    128a:	80 e3       	ldi	r24, 0x30	; 48
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    1292:	11 50       	subi	r17, 0x01	; 1
    1294:	f7 cf       	rjmp	.-18     	; 0x1284 <vfprintf+0x636>
    1296:	ca 94       	dec	r12
    1298:	f3 01       	movw	r30, r6
    129a:	ec 0d       	add	r30, r12
    129c:	f1 1d       	adc	r31, r1
    129e:	80 81       	ld	r24, Z
    12a0:	b7 01       	movw	r22, r14
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    12a8:	c1 10       	cpse	r12, r1
    12aa:	f5 cf       	rjmp	.-22     	; 0x1296 <vfprintf+0x648>
    12ac:	15 c0       	rjmp	.+42     	; 0x12d8 <vfprintf+0x68a>
    12ae:	f4 e0       	ldi	r31, 0x04	; 4
    12b0:	f5 15       	cp	r31, r5
    12b2:	60 f5       	brcc	.+88     	; 0x130c <vfprintf+0x6be>
    12b4:	84 e0       	ldi	r24, 0x04	; 4
    12b6:	58 1a       	sub	r5, r24
    12b8:	93 fe       	sbrs	r9, 3
    12ba:	1f c0       	rjmp	.+62     	; 0x12fa <vfprintf+0x6ac>
    12bc:	01 11       	cpse	r16, r1
    12be:	27 c0       	rjmp	.+78     	; 0x130e <vfprintf+0x6c0>
    12c0:	2c 85       	ldd	r18, Y+12	; 0x0c
    12c2:	23 ff       	sbrs	r18, 3
    12c4:	2a c0       	rjmp	.+84     	; 0x131a <vfprintf+0x6cc>
    12c6:	04 e5       	ldi	r16, 0x54	; 84
    12c8:	10 e0       	ldi	r17, 0x00	; 0
    12ca:	39 2d       	mov	r19, r9
    12cc:	30 71       	andi	r19, 0x10	; 16
    12ce:	93 2e       	mov	r9, r19
    12d0:	f8 01       	movw	r30, r16
    12d2:	84 91       	lpm	r24, Z
    12d4:	81 11       	cpse	r24, r1
    12d6:	24 c0       	rjmp	.+72     	; 0x1320 <vfprintf+0x6d2>
    12d8:	55 20       	and	r5, r5
    12da:	09 f4       	brne	.+2      	; 0x12de <vfprintf+0x690>
    12dc:	e4 cc       	rjmp	.-1592   	; 0xca6 <vfprintf+0x58>
    12de:	b7 01       	movw	r22, r14
    12e0:	80 e2       	ldi	r24, 0x20	; 32
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    12e8:	5a 94       	dec	r5
    12ea:	f6 cf       	rjmp	.-20     	; 0x12d8 <vfprintf+0x68a>
    12ec:	f7 01       	movw	r30, r14
    12ee:	86 81       	ldd	r24, Z+6	; 0x06
    12f0:	97 81       	ldd	r25, Z+7	; 0x07
    12f2:	26 c0       	rjmp	.+76     	; 0x1340 <vfprintf+0x6f2>
    12f4:	8f ef       	ldi	r24, 0xFF	; 255
    12f6:	9f ef       	ldi	r25, 0xFF	; 255
    12f8:	23 c0       	rjmp	.+70     	; 0x1340 <vfprintf+0x6f2>
    12fa:	b7 01       	movw	r22, r14
    12fc:	80 e2       	ldi	r24, 0x20	; 32
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    1304:	5a 94       	dec	r5
    1306:	51 10       	cpse	r5, r1
    1308:	f8 cf       	rjmp	.-16     	; 0x12fa <vfprintf+0x6ac>
    130a:	d8 cf       	rjmp	.-80     	; 0x12bc <vfprintf+0x66e>
    130c:	51 2c       	mov	r5, r1
    130e:	b7 01       	movw	r22, r14
    1310:	80 2f       	mov	r24, r16
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    1318:	d3 cf       	rjmp	.-90     	; 0x12c0 <vfprintf+0x672>
    131a:	08 e5       	ldi	r16, 0x58	; 88
    131c:	10 e0       	ldi	r17, 0x00	; 0
    131e:	d5 cf       	rjmp	.-86     	; 0x12ca <vfprintf+0x67c>
    1320:	91 10       	cpse	r9, r1
    1322:	80 52       	subi	r24, 0x20	; 32
    1324:	b7 01       	movw	r22, r14
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	0e 94 c9 0a 	call	0x1592	; 0x1592 <fputc>
    132c:	0f 5f       	subi	r16, 0xFF	; 255
    132e:	1f 4f       	sbci	r17, 0xFF	; 255
    1330:	cf cf       	rjmp	.-98     	; 0x12d0 <vfprintf+0x682>
    1332:	23 e0       	ldi	r18, 0x03	; 3
    1334:	25 15       	cp	r18, r5
    1336:	10 f4       	brcc	.+4      	; 0x133c <vfprintf+0x6ee>
    1338:	83 e0       	ldi	r24, 0x03	; 3
    133a:	bd cf       	rjmp	.-134    	; 0x12b6 <vfprintf+0x668>
    133c:	51 2c       	mov	r5, r1
    133e:	c0 cf       	rjmp	.-128    	; 0x12c0 <vfprintf+0x672>
    1340:	60 96       	adiw	r28, 0x10	; 16
    1342:	e2 e1       	ldi	r30, 0x12	; 18
    1344:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__epilogue_restores__>

00001348 <__prologue_saves__>:
    1348:	2f 92       	push	r2
    134a:	3f 92       	push	r3
    134c:	4f 92       	push	r4
    134e:	5f 92       	push	r5
    1350:	6f 92       	push	r6
    1352:	7f 92       	push	r7
    1354:	8f 92       	push	r8
    1356:	9f 92       	push	r9
    1358:	af 92       	push	r10
    135a:	bf 92       	push	r11
    135c:	cf 92       	push	r12
    135e:	df 92       	push	r13
    1360:	ef 92       	push	r14
    1362:	ff 92       	push	r15
    1364:	0f 93       	push	r16
    1366:	1f 93       	push	r17
    1368:	cf 93       	push	r28
    136a:	df 93       	push	r29
    136c:	cd b7       	in	r28, 0x3d	; 61
    136e:	de b7       	in	r29, 0x3e	; 62
    1370:	ca 1b       	sub	r28, r26
    1372:	db 0b       	sbc	r29, r27
    1374:	0f b6       	in	r0, 0x3f	; 63
    1376:	f8 94       	cli
    1378:	de bf       	out	0x3e, r29	; 62
    137a:	0f be       	out	0x3f, r0	; 63
    137c:	cd bf       	out	0x3d, r28	; 61
    137e:	09 94       	ijmp

00001380 <__epilogue_restores__>:
    1380:	2a 88       	ldd	r2, Y+18	; 0x12
    1382:	39 88       	ldd	r3, Y+17	; 0x11
    1384:	48 88       	ldd	r4, Y+16	; 0x10
    1386:	5f 84       	ldd	r5, Y+15	; 0x0f
    1388:	6e 84       	ldd	r6, Y+14	; 0x0e
    138a:	7d 84       	ldd	r7, Y+13	; 0x0d
    138c:	8c 84       	ldd	r8, Y+12	; 0x0c
    138e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1390:	aa 84       	ldd	r10, Y+10	; 0x0a
    1392:	b9 84       	ldd	r11, Y+9	; 0x09
    1394:	c8 84       	ldd	r12, Y+8	; 0x08
    1396:	df 80       	ldd	r13, Y+7	; 0x07
    1398:	ee 80       	ldd	r14, Y+6	; 0x06
    139a:	fd 80       	ldd	r15, Y+5	; 0x05
    139c:	0c 81       	ldd	r16, Y+4	; 0x04
    139e:	1b 81       	ldd	r17, Y+3	; 0x03
    13a0:	aa 81       	ldd	r26, Y+2	; 0x02
    13a2:	b9 81       	ldd	r27, Y+1	; 0x01
    13a4:	ce 0f       	add	r28, r30
    13a6:	d1 1d       	adc	r29, r1
    13a8:	0f b6       	in	r0, 0x3f	; 63
    13aa:	f8 94       	cli
    13ac:	de bf       	out	0x3e, r29	; 62
    13ae:	0f be       	out	0x3f, r0	; 63
    13b0:	cd bf       	out	0x3d, r28	; 61
    13b2:	ed 01       	movw	r28, r26
    13b4:	08 95       	ret

000013b6 <__ftoa_engine>:
    13b6:	28 30       	cpi	r18, 0x08	; 8
    13b8:	08 f0       	brcs	.+2      	; 0x13bc <__ftoa_engine+0x6>
    13ba:	27 e0       	ldi	r18, 0x07	; 7
    13bc:	33 27       	eor	r19, r19
    13be:	da 01       	movw	r26, r20
    13c0:	99 0f       	add	r25, r25
    13c2:	31 1d       	adc	r19, r1
    13c4:	87 fd       	sbrc	r24, 7
    13c6:	91 60       	ori	r25, 0x01	; 1
    13c8:	00 96       	adiw	r24, 0x00	; 0
    13ca:	61 05       	cpc	r22, r1
    13cc:	71 05       	cpc	r23, r1
    13ce:	39 f4       	brne	.+14     	; 0x13de <__ftoa_engine+0x28>
    13d0:	32 60       	ori	r19, 0x02	; 2
    13d2:	2e 5f       	subi	r18, 0xFE	; 254
    13d4:	3d 93       	st	X+, r19
    13d6:	30 e3       	ldi	r19, 0x30	; 48
    13d8:	2a 95       	dec	r18
    13da:	e1 f7       	brne	.-8      	; 0x13d4 <__ftoa_engine+0x1e>
    13dc:	08 95       	ret
    13de:	9f 3f       	cpi	r25, 0xFF	; 255
    13e0:	30 f0       	brcs	.+12     	; 0x13ee <__ftoa_engine+0x38>
    13e2:	80 38       	cpi	r24, 0x80	; 128
    13e4:	71 05       	cpc	r23, r1
    13e6:	61 05       	cpc	r22, r1
    13e8:	09 f0       	breq	.+2      	; 0x13ec <__ftoa_engine+0x36>
    13ea:	3c 5f       	subi	r19, 0xFC	; 252
    13ec:	3c 5f       	subi	r19, 0xFC	; 252
    13ee:	3d 93       	st	X+, r19
    13f0:	91 30       	cpi	r25, 0x01	; 1
    13f2:	08 f0       	brcs	.+2      	; 0x13f6 <__ftoa_engine+0x40>
    13f4:	80 68       	ori	r24, 0x80	; 128
    13f6:	91 1d       	adc	r25, r1
    13f8:	df 93       	push	r29
    13fa:	cf 93       	push	r28
    13fc:	1f 93       	push	r17
    13fe:	0f 93       	push	r16
    1400:	ff 92       	push	r15
    1402:	ef 92       	push	r14
    1404:	19 2f       	mov	r17, r25
    1406:	98 7f       	andi	r25, 0xF8	; 248
    1408:	96 95       	lsr	r25
    140a:	e9 2f       	mov	r30, r25
    140c:	96 95       	lsr	r25
    140e:	96 95       	lsr	r25
    1410:	e9 0f       	add	r30, r25
    1412:	ff 27       	eor	r31, r31
    1414:	ea 54       	subi	r30, 0x4A	; 74
    1416:	ff 4f       	sbci	r31, 0xFF	; 255
    1418:	99 27       	eor	r25, r25
    141a:	33 27       	eor	r19, r19
    141c:	ee 24       	eor	r14, r14
    141e:	ff 24       	eor	r15, r15
    1420:	a7 01       	movw	r20, r14
    1422:	e7 01       	movw	r28, r14
    1424:	05 90       	lpm	r0, Z+
    1426:	08 94       	sec
    1428:	07 94       	ror	r0
    142a:	28 f4       	brcc	.+10     	; 0x1436 <__ftoa_engine+0x80>
    142c:	36 0f       	add	r19, r22
    142e:	e7 1e       	adc	r14, r23
    1430:	f8 1e       	adc	r15, r24
    1432:	49 1f       	adc	r20, r25
    1434:	51 1d       	adc	r21, r1
    1436:	66 0f       	add	r22, r22
    1438:	77 1f       	adc	r23, r23
    143a:	88 1f       	adc	r24, r24
    143c:	99 1f       	adc	r25, r25
    143e:	06 94       	lsr	r0
    1440:	a1 f7       	brne	.-24     	; 0x142a <__ftoa_engine+0x74>
    1442:	05 90       	lpm	r0, Z+
    1444:	07 94       	ror	r0
    1446:	28 f4       	brcc	.+10     	; 0x1452 <__ftoa_engine+0x9c>
    1448:	e7 0e       	add	r14, r23
    144a:	f8 1e       	adc	r15, r24
    144c:	49 1f       	adc	r20, r25
    144e:	56 1f       	adc	r21, r22
    1450:	c1 1d       	adc	r28, r1
    1452:	77 0f       	add	r23, r23
    1454:	88 1f       	adc	r24, r24
    1456:	99 1f       	adc	r25, r25
    1458:	66 1f       	adc	r22, r22
    145a:	06 94       	lsr	r0
    145c:	a1 f7       	brne	.-24     	; 0x1446 <__ftoa_engine+0x90>
    145e:	05 90       	lpm	r0, Z+
    1460:	07 94       	ror	r0
    1462:	28 f4       	brcc	.+10     	; 0x146e <__ftoa_engine+0xb8>
    1464:	f8 0e       	add	r15, r24
    1466:	49 1f       	adc	r20, r25
    1468:	56 1f       	adc	r21, r22
    146a:	c7 1f       	adc	r28, r23
    146c:	d1 1d       	adc	r29, r1
    146e:	88 0f       	add	r24, r24
    1470:	99 1f       	adc	r25, r25
    1472:	66 1f       	adc	r22, r22
    1474:	77 1f       	adc	r23, r23
    1476:	06 94       	lsr	r0
    1478:	a1 f7       	brne	.-24     	; 0x1462 <__ftoa_engine+0xac>
    147a:	05 90       	lpm	r0, Z+
    147c:	07 94       	ror	r0
    147e:	20 f4       	brcc	.+8      	; 0x1488 <__ftoa_engine+0xd2>
    1480:	49 0f       	add	r20, r25
    1482:	56 1f       	adc	r21, r22
    1484:	c7 1f       	adc	r28, r23
    1486:	d8 1f       	adc	r29, r24
    1488:	99 0f       	add	r25, r25
    148a:	66 1f       	adc	r22, r22
    148c:	77 1f       	adc	r23, r23
    148e:	88 1f       	adc	r24, r24
    1490:	06 94       	lsr	r0
    1492:	a9 f7       	brne	.-22     	; 0x147e <__ftoa_engine+0xc8>
    1494:	84 91       	lpm	r24, Z
    1496:	10 95       	com	r17
    1498:	17 70       	andi	r17, 0x07	; 7
    149a:	41 f0       	breq	.+16     	; 0x14ac <__ftoa_engine+0xf6>
    149c:	d6 95       	lsr	r29
    149e:	c7 95       	ror	r28
    14a0:	57 95       	ror	r21
    14a2:	47 95       	ror	r20
    14a4:	f7 94       	ror	r15
    14a6:	e7 94       	ror	r14
    14a8:	1a 95       	dec	r17
    14aa:	c1 f7       	brne	.-16     	; 0x149c <__ftoa_engine+0xe6>
    14ac:	ec e5       	ldi	r30, 0x5C	; 92
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	68 94       	set
    14b2:	15 90       	lpm	r1, Z+
    14b4:	15 91       	lpm	r17, Z+
    14b6:	35 91       	lpm	r19, Z+
    14b8:	65 91       	lpm	r22, Z+
    14ba:	95 91       	lpm	r25, Z+
    14bc:	05 90       	lpm	r0, Z+
    14be:	7f e2       	ldi	r23, 0x2F	; 47
    14c0:	73 95       	inc	r23
    14c2:	e1 18       	sub	r14, r1
    14c4:	f1 0a       	sbc	r15, r17
    14c6:	43 0b       	sbc	r20, r19
    14c8:	56 0b       	sbc	r21, r22
    14ca:	c9 0b       	sbc	r28, r25
    14cc:	d0 09       	sbc	r29, r0
    14ce:	c0 f7       	brcc	.-16     	; 0x14c0 <__ftoa_engine+0x10a>
    14d0:	e1 0c       	add	r14, r1
    14d2:	f1 1e       	adc	r15, r17
    14d4:	43 1f       	adc	r20, r19
    14d6:	56 1f       	adc	r21, r22
    14d8:	c9 1f       	adc	r28, r25
    14da:	d0 1d       	adc	r29, r0
    14dc:	7e f4       	brtc	.+30     	; 0x14fc <__ftoa_engine+0x146>
    14de:	70 33       	cpi	r23, 0x30	; 48
    14e0:	11 f4       	brne	.+4      	; 0x14e6 <__ftoa_engine+0x130>
    14e2:	8a 95       	dec	r24
    14e4:	e6 cf       	rjmp	.-52     	; 0x14b2 <__ftoa_engine+0xfc>
    14e6:	e8 94       	clt
    14e8:	01 50       	subi	r16, 0x01	; 1
    14ea:	30 f0       	brcs	.+12     	; 0x14f8 <__ftoa_engine+0x142>
    14ec:	08 0f       	add	r16, r24
    14ee:	0a f4       	brpl	.+2      	; 0x14f2 <__ftoa_engine+0x13c>
    14f0:	00 27       	eor	r16, r16
    14f2:	02 17       	cp	r16, r18
    14f4:	08 f4       	brcc	.+2      	; 0x14f8 <__ftoa_engine+0x142>
    14f6:	20 2f       	mov	r18, r16
    14f8:	23 95       	inc	r18
    14fa:	02 2f       	mov	r16, r18
    14fc:	7a 33       	cpi	r23, 0x3A	; 58
    14fe:	28 f0       	brcs	.+10     	; 0x150a <__ftoa_engine+0x154>
    1500:	79 e3       	ldi	r23, 0x39	; 57
    1502:	7d 93       	st	X+, r23
    1504:	2a 95       	dec	r18
    1506:	e9 f7       	brne	.-6      	; 0x1502 <__ftoa_engine+0x14c>
    1508:	10 c0       	rjmp	.+32     	; 0x152a <__ftoa_engine+0x174>
    150a:	7d 93       	st	X+, r23
    150c:	2a 95       	dec	r18
    150e:	89 f6       	brne	.-94     	; 0x14b2 <__ftoa_engine+0xfc>
    1510:	06 94       	lsr	r0
    1512:	97 95       	ror	r25
    1514:	67 95       	ror	r22
    1516:	37 95       	ror	r19
    1518:	17 95       	ror	r17
    151a:	17 94       	ror	r1
    151c:	e1 18       	sub	r14, r1
    151e:	f1 0a       	sbc	r15, r17
    1520:	43 0b       	sbc	r20, r19
    1522:	56 0b       	sbc	r21, r22
    1524:	c9 0b       	sbc	r28, r25
    1526:	d0 09       	sbc	r29, r0
    1528:	98 f0       	brcs	.+38     	; 0x1550 <__ftoa_engine+0x19a>
    152a:	23 95       	inc	r18
    152c:	7e 91       	ld	r23, -X
    152e:	73 95       	inc	r23
    1530:	7a 33       	cpi	r23, 0x3A	; 58
    1532:	08 f0       	brcs	.+2      	; 0x1536 <__ftoa_engine+0x180>
    1534:	70 e3       	ldi	r23, 0x30	; 48
    1536:	7c 93       	st	X, r23
    1538:	20 13       	cpse	r18, r16
    153a:	b8 f7       	brcc	.-18     	; 0x152a <__ftoa_engine+0x174>
    153c:	7e 91       	ld	r23, -X
    153e:	70 61       	ori	r23, 0x10	; 16
    1540:	7d 93       	st	X+, r23
    1542:	30 f0       	brcs	.+12     	; 0x1550 <__ftoa_engine+0x19a>
    1544:	83 95       	inc	r24
    1546:	71 e3       	ldi	r23, 0x31	; 49
    1548:	7d 93       	st	X+, r23
    154a:	70 e3       	ldi	r23, 0x30	; 48
    154c:	2a 95       	dec	r18
    154e:	e1 f7       	brne	.-8      	; 0x1548 <__ftoa_engine+0x192>
    1550:	11 24       	eor	r1, r1
    1552:	ef 90       	pop	r14
    1554:	ff 90       	pop	r15
    1556:	0f 91       	pop	r16
    1558:	1f 91       	pop	r17
    155a:	cf 91       	pop	r28
    155c:	df 91       	pop	r29
    155e:	99 27       	eor	r25, r25
    1560:	87 fd       	sbrc	r24, 7
    1562:	90 95       	com	r25
    1564:	08 95       	ret

00001566 <strnlen_P>:
    1566:	fc 01       	movw	r30, r24
    1568:	05 90       	lpm	r0, Z+
    156a:	61 50       	subi	r22, 0x01	; 1
    156c:	70 40       	sbci	r23, 0x00	; 0
    156e:	01 10       	cpse	r0, r1
    1570:	d8 f7       	brcc	.-10     	; 0x1568 <strnlen_P+0x2>
    1572:	80 95       	com	r24
    1574:	90 95       	com	r25
    1576:	8e 0f       	add	r24, r30
    1578:	9f 1f       	adc	r25, r31
    157a:	08 95       	ret

0000157c <strnlen>:
    157c:	fc 01       	movw	r30, r24
    157e:	61 50       	subi	r22, 0x01	; 1
    1580:	70 40       	sbci	r23, 0x00	; 0
    1582:	01 90       	ld	r0, Z+
    1584:	01 10       	cpse	r0, r1
    1586:	d8 f7       	brcc	.-10     	; 0x157e <strnlen+0x2>
    1588:	80 95       	com	r24
    158a:	90 95       	com	r25
    158c:	8e 0f       	add	r24, r30
    158e:	9f 1f       	adc	r25, r31
    1590:	08 95       	ret

00001592 <fputc>:
    1592:	0f 93       	push	r16
    1594:	1f 93       	push	r17
    1596:	cf 93       	push	r28
    1598:	df 93       	push	r29
    159a:	fb 01       	movw	r30, r22
    159c:	23 81       	ldd	r18, Z+3	; 0x03
    159e:	21 fd       	sbrc	r18, 1
    15a0:	03 c0       	rjmp	.+6      	; 0x15a8 <fputc+0x16>
    15a2:	8f ef       	ldi	r24, 0xFF	; 255
    15a4:	9f ef       	ldi	r25, 0xFF	; 255
    15a6:	2c c0       	rjmp	.+88     	; 0x1600 <fputc+0x6e>
    15a8:	22 ff       	sbrs	r18, 2
    15aa:	16 c0       	rjmp	.+44     	; 0x15d8 <fputc+0x46>
    15ac:	46 81       	ldd	r20, Z+6	; 0x06
    15ae:	57 81       	ldd	r21, Z+7	; 0x07
    15b0:	24 81       	ldd	r18, Z+4	; 0x04
    15b2:	35 81       	ldd	r19, Z+5	; 0x05
    15b4:	42 17       	cp	r20, r18
    15b6:	53 07       	cpc	r21, r19
    15b8:	44 f4       	brge	.+16     	; 0x15ca <fputc+0x38>
    15ba:	a0 81       	ld	r26, Z
    15bc:	b1 81       	ldd	r27, Z+1	; 0x01
    15be:	9d 01       	movw	r18, r26
    15c0:	2f 5f       	subi	r18, 0xFF	; 255
    15c2:	3f 4f       	sbci	r19, 0xFF	; 255
    15c4:	31 83       	std	Z+1, r19	; 0x01
    15c6:	20 83       	st	Z, r18
    15c8:	8c 93       	st	X, r24
    15ca:	26 81       	ldd	r18, Z+6	; 0x06
    15cc:	37 81       	ldd	r19, Z+7	; 0x07
    15ce:	2f 5f       	subi	r18, 0xFF	; 255
    15d0:	3f 4f       	sbci	r19, 0xFF	; 255
    15d2:	37 83       	std	Z+7, r19	; 0x07
    15d4:	26 83       	std	Z+6, r18	; 0x06
    15d6:	14 c0       	rjmp	.+40     	; 0x1600 <fputc+0x6e>
    15d8:	8b 01       	movw	r16, r22
    15da:	ec 01       	movw	r28, r24
    15dc:	fb 01       	movw	r30, r22
    15de:	00 84       	ldd	r0, Z+8	; 0x08
    15e0:	f1 85       	ldd	r31, Z+9	; 0x09
    15e2:	e0 2d       	mov	r30, r0
    15e4:	09 95       	icall
    15e6:	89 2b       	or	r24, r25
    15e8:	e1 f6       	brne	.-72     	; 0x15a2 <fputc+0x10>
    15ea:	d8 01       	movw	r26, r16
    15ec:	16 96       	adiw	r26, 0x06	; 6
    15ee:	8d 91       	ld	r24, X+
    15f0:	9c 91       	ld	r25, X
    15f2:	17 97       	sbiw	r26, 0x07	; 7
    15f4:	01 96       	adiw	r24, 0x01	; 1
    15f6:	17 96       	adiw	r26, 0x07	; 7
    15f8:	9c 93       	st	X, r25
    15fa:	8e 93       	st	-X, r24
    15fc:	16 97       	sbiw	r26, 0x06	; 6
    15fe:	ce 01       	movw	r24, r28
    1600:	df 91       	pop	r29
    1602:	cf 91       	pop	r28
    1604:	1f 91       	pop	r17
    1606:	0f 91       	pop	r16
    1608:	08 95       	ret

0000160a <vsprintf>:
    160a:	ae e0       	ldi	r26, 0x0E	; 14
    160c:	b0 e0       	ldi	r27, 0x00	; 0
    160e:	eb e0       	ldi	r30, 0x0B	; 11
    1610:	fb e0       	ldi	r31, 0x0B	; 11
    1612:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <__prologue_saves__+0x1c>
    1616:	8c 01       	movw	r16, r24
    1618:	86 e0       	ldi	r24, 0x06	; 6
    161a:	8c 83       	std	Y+4, r24	; 0x04
    161c:	1a 83       	std	Y+2, r17	; 0x02
    161e:	09 83       	std	Y+1, r16	; 0x01
    1620:	8f ef       	ldi	r24, 0xFF	; 255
    1622:	9f e7       	ldi	r25, 0x7F	; 127
    1624:	9e 83       	std	Y+6, r25	; 0x06
    1626:	8d 83       	std	Y+5, r24	; 0x05
    1628:	ce 01       	movw	r24, r28
    162a:	01 96       	adiw	r24, 0x01	; 1
    162c:	0e 94 27 06 	call	0xc4e	; 0xc4e <vfprintf>
    1630:	ef 81       	ldd	r30, Y+7	; 0x07
    1632:	f8 85       	ldd	r31, Y+8	; 0x08
    1634:	e0 0f       	add	r30, r16
    1636:	f1 1f       	adc	r31, r17
    1638:	10 82       	st	Z, r1
    163a:	2e 96       	adiw	r28, 0x0e	; 14
    163c:	e4 e0       	ldi	r30, 0x04	; 4
    163e:	0c 94 ce 09 	jmp	0x139c	; 0x139c <__epilogue_restores__+0x1c>

00001642 <__ultoa_invert>:
    1642:	fa 01       	movw	r30, r20
    1644:	aa 27       	eor	r26, r26
    1646:	28 30       	cpi	r18, 0x08	; 8
    1648:	51 f1       	breq	.+84     	; 0x169e <__ultoa_invert+0x5c>
    164a:	20 31       	cpi	r18, 0x10	; 16
    164c:	81 f1       	breq	.+96     	; 0x16ae <__ultoa_invert+0x6c>
    164e:	e8 94       	clt
    1650:	6f 93       	push	r22
    1652:	6e 7f       	andi	r22, 0xFE	; 254
    1654:	6e 5f       	subi	r22, 0xFE	; 254
    1656:	7f 4f       	sbci	r23, 0xFF	; 255
    1658:	8f 4f       	sbci	r24, 0xFF	; 255
    165a:	9f 4f       	sbci	r25, 0xFF	; 255
    165c:	af 4f       	sbci	r26, 0xFF	; 255
    165e:	b1 e0       	ldi	r27, 0x01	; 1
    1660:	3e d0       	rcall	.+124    	; 0x16de <__ultoa_invert+0x9c>
    1662:	b4 e0       	ldi	r27, 0x04	; 4
    1664:	3c d0       	rcall	.+120    	; 0x16de <__ultoa_invert+0x9c>
    1666:	67 0f       	add	r22, r23
    1668:	78 1f       	adc	r23, r24
    166a:	89 1f       	adc	r24, r25
    166c:	9a 1f       	adc	r25, r26
    166e:	a1 1d       	adc	r26, r1
    1670:	68 0f       	add	r22, r24
    1672:	79 1f       	adc	r23, r25
    1674:	8a 1f       	adc	r24, r26
    1676:	91 1d       	adc	r25, r1
    1678:	a1 1d       	adc	r26, r1
    167a:	6a 0f       	add	r22, r26
    167c:	71 1d       	adc	r23, r1
    167e:	81 1d       	adc	r24, r1
    1680:	91 1d       	adc	r25, r1
    1682:	a1 1d       	adc	r26, r1
    1684:	20 d0       	rcall	.+64     	; 0x16c6 <__ultoa_invert+0x84>
    1686:	09 f4       	brne	.+2      	; 0x168a <__ultoa_invert+0x48>
    1688:	68 94       	set
    168a:	3f 91       	pop	r19
    168c:	2a e0       	ldi	r18, 0x0A	; 10
    168e:	26 9f       	mul	r18, r22
    1690:	11 24       	eor	r1, r1
    1692:	30 19       	sub	r19, r0
    1694:	30 5d       	subi	r19, 0xD0	; 208
    1696:	31 93       	st	Z+, r19
    1698:	de f6       	brtc	.-74     	; 0x1650 <__ultoa_invert+0xe>
    169a:	cf 01       	movw	r24, r30
    169c:	08 95       	ret
    169e:	46 2f       	mov	r20, r22
    16a0:	47 70       	andi	r20, 0x07	; 7
    16a2:	40 5d       	subi	r20, 0xD0	; 208
    16a4:	41 93       	st	Z+, r20
    16a6:	b3 e0       	ldi	r27, 0x03	; 3
    16a8:	0f d0       	rcall	.+30     	; 0x16c8 <__ultoa_invert+0x86>
    16aa:	c9 f7       	brne	.-14     	; 0x169e <__ultoa_invert+0x5c>
    16ac:	f6 cf       	rjmp	.-20     	; 0x169a <__ultoa_invert+0x58>
    16ae:	46 2f       	mov	r20, r22
    16b0:	4f 70       	andi	r20, 0x0F	; 15
    16b2:	40 5d       	subi	r20, 0xD0	; 208
    16b4:	4a 33       	cpi	r20, 0x3A	; 58
    16b6:	18 f0       	brcs	.+6      	; 0x16be <__ultoa_invert+0x7c>
    16b8:	49 5d       	subi	r20, 0xD9	; 217
    16ba:	31 fd       	sbrc	r19, 1
    16bc:	40 52       	subi	r20, 0x20	; 32
    16be:	41 93       	st	Z+, r20
    16c0:	02 d0       	rcall	.+4      	; 0x16c6 <__ultoa_invert+0x84>
    16c2:	a9 f7       	brne	.-22     	; 0x16ae <__ultoa_invert+0x6c>
    16c4:	ea cf       	rjmp	.-44     	; 0x169a <__ultoa_invert+0x58>
    16c6:	b4 e0       	ldi	r27, 0x04	; 4
    16c8:	a6 95       	lsr	r26
    16ca:	97 95       	ror	r25
    16cc:	87 95       	ror	r24
    16ce:	77 95       	ror	r23
    16d0:	67 95       	ror	r22
    16d2:	ba 95       	dec	r27
    16d4:	c9 f7       	brne	.-14     	; 0x16c8 <__ultoa_invert+0x86>
    16d6:	00 97       	sbiw	r24, 0x00	; 0
    16d8:	61 05       	cpc	r22, r1
    16da:	71 05       	cpc	r23, r1
    16dc:	08 95       	ret
    16de:	9b 01       	movw	r18, r22
    16e0:	ac 01       	movw	r20, r24
    16e2:	0a 2e       	mov	r0, r26
    16e4:	06 94       	lsr	r0
    16e6:	57 95       	ror	r21
    16e8:	47 95       	ror	r20
    16ea:	37 95       	ror	r19
    16ec:	27 95       	ror	r18
    16ee:	ba 95       	dec	r27
    16f0:	c9 f7       	brne	.-14     	; 0x16e4 <__ultoa_invert+0xa2>
    16f2:	62 0f       	add	r22, r18
    16f4:	73 1f       	adc	r23, r19
    16f6:	84 1f       	adc	r24, r20
    16f8:	95 1f       	adc	r25, r21
    16fa:	a0 1d       	adc	r26, r0
    16fc:	08 95       	ret

000016fe <_exit>:
    16fe:	f8 94       	cli

00001700 <__stop_program>:
    1700:	ff cf       	rjmp	.-2      	; 0x1700 <__stop_program>
